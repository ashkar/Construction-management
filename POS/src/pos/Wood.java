/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Wood.java
 *
 * Created on Feb 27, 2013, 3:53:07 PM
 */
package pos;

import java.awt.Color;
import java.sql.*;
import java.text.SimpleDateFormat;
import javax.swing.*;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author Home
 */
public class Wood extends javax.swing.JFrame {

    int temp = 0;
    JComboBox comboname;
    int exp=0,cost=0,quantity=0,total=0;
    
    
    /** Creates new form Wood */
    public Wood() {
        initComponents();
        setTitle("Add Wood");
        setSize(600,650);
        setVisible(true);
        setLocation(238,0);
        getContentPane().setBackground(new Color(129,134,138));
        Functions.FillCombo(vendorCombo, "VENNAME", "Vendor");
        Functions.FillCombo(wtypeCombo, "WOODTYPE", "Names");
        AutoCompleteDecorator.decorate(vendorCombo);
        AutoCompleteDecorator.decorate(wtypeCombo);
    }
    
    public Wood(int i,JComboBox combo)
    {
        initComponents();
        setTitle("Add Wood");
        setSize(600,550);
        setVisible(true);
        setLocation(238,0);
        getContentPane().setBackground(new Color(129,134,138));
        Functions.FillCombo(vendorCombo, "VENNAME", "Vendor");
        Functions.FillCombo(wtypeCombo, "WOODTYPE", "Names");
        AutoCompleteDecorator.decorate(vendorCombo);
        AutoCompleteDecorator.decorate(wtypeCombo);
        
        comboname = combo;
        temp = i;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        add_woodLable = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        woodLabel = new javax.swing.JLabel();
        costLabel = new javax.swing.JLabel();
        costTextField = new javax.swing.JTextField();
        vendorLabel = new javax.swing.JLabel();
        quantityLabel = new javax.swing.JLabel();
        quantityTextField = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        billdate = new org.jdesktop.swingx.JXDatePicker();
        cancelButton = new javax.swing.JButton();
        wtypeCombo = new javax.swing.JComboBox();
        vendorCombo = new javax.swing.JComboBox();
        ExpLabel = new javax.swing.JLabel();
        ExpTextField = new javax.swing.JTextField();
        DetLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        DetailsTextArea = new javax.swing.JTextArea();
        woodButton = new javax.swing.JButton();
        vendorButton = new javax.swing.JButton();
        cashLabel = new javax.swing.JLabel();
        totalLabel = new javax.swing.JLabel();
        batchLabel = new javax.swing.JLabel();
        BatchTextField = new javax.swing.JTextField();
        pricetypeCombo = new javax.swing.JComboBox();
        pricetypeLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        add_woodLable.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        add_woodLable.setForeground(new java.awt.Color(0, 102, 102));
        add_woodLable.setText("Wood Stock");

        dateLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        dateLabel.setText("Bill Date");

        woodLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        woodLabel.setText("Wood Type");

        costLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        costLabel.setText("Cost");

        costTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                costTextFieldKeyReleased(evt);
            }
        });

        vendorLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        vendorLabel.setText("Vendor");

        quantityLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        quantityLabel.setText("Quantity");

        quantityTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                quantityTextFieldKeyReleased(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        wtypeCombo.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        wtypeCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select" }));

        vendorCombo.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        vendorCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select" }));

        ExpLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        ExpLabel.setText("Expenses");

        ExpTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExpTextFieldActionPerformed(evt);
            }
        });
        ExpTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ExpTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ExpTextFieldFocusLost(evt);
            }
        });
        ExpTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ExpTextFieldKeyReleased(evt);
            }
        });

        DetLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        DetLabel.setText("Details");

        DetailsTextArea.setColumns(15);
        DetailsTextArea.setRows(5);
        DetailsTextArea.setAutoscrolls(false);
        DetailsTextArea.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(DetailsTextArea);

        woodButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add.png"))); // NOI18N
        woodButton.setContentAreaFilled(false);
        woodButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                woodButtonActionPerformed(evt);
            }
        });

        vendorButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add.png"))); // NOI18N
        vendorButton.setContentAreaFilled(false);
        vendorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vendorButtonActionPerformed(evt);
            }
        });

        cashLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        cashLabel.setForeground(new java.awt.Color(255, 0, 0));
        cashLabel.setText("Cash");

        totalLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        totalLabel.setText("Total");

        batchLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        batchLabel.setText("Batch");

        BatchTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BatchTextFieldActionPerformed(evt);
            }
        });
        BatchTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                BatchTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                BatchTextFieldFocusLost(evt);
            }
        });
        BatchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                BatchTextFieldKeyReleased(evt);
            }
        });

        pricetypeCombo.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        pricetypeCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "Per Unit", "Total" }));
        pricetypeCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                pricetypeComboItemStateChanged(evt);
            }
        });

        pricetypeLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        pricetypeLabel.setText("Price Type");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(169, 169, 169))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(batchLabel)
                            .addComponent(woodLabel)
                            .addComponent(pricetypeLabel)
                            .addComponent(quantityLabel)
                            .addComponent(costLabel)
                            .addComponent(vendorLabel)
                            .addComponent(ExpLabel)
                            .addComponent(DetLabel)
                            .addComponent(dateLabel)
                            .addComponent(totalLabel))
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cashLabel)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(billdate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(wtypeCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(BatchTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pricetypeCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(quantityTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(costTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(vendorCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ExpTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(woodButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(vendorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 163, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(184, 184, 184)
                .addComponent(add_woodLable)
                .addGap(58, 58, 58))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(add_woodLable)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(billdate, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(wtypeCombo)
                            .addComponent(woodLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BatchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(batchLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pricetypeLabel)
                            .addComponent(pricetypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(quantityLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(quantityTextField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(costTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(costLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(woodButton, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(vendorButton)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(vendorLabel)
                            .addComponent(vendorCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ExpLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                            .addComponent(ExpTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(DetLabel)
                                .addGap(75, 75, 75)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(totalLabel)
                                    .addComponent(cashLabel)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(134, 134, 134))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
     String woodtype,vendor,details,batch;
     int flag = 0;
     ExpLabel.setForeground(Color.black);
      woodLabel.setForeground(Color.black);
       pricetypeLabel.setForeground(Color.black);
        costLabel.setForeground(Color.black);
         batchLabel.setForeground(Color.black);
          quantityLabel.setForeground(Color.black);
           dateLabel.setForeground(Color.black);
            DetLabel.setForeground(Color.black);
             vendorLabel.setForeground(Color.black);
      
    
    if(wtypeCombo.getSelectedItem().equals("Select"))
    {
        woodLabel.setForeground(Color.red);
        flag++;
    }
    
    if(costTextField.getText().equals(""))
    {
        costLabel.setForeground(Color.red);
        flag++;
    }
   
    if(billdate.getEditor().getText().equals(""))
    {
        dateLabel.setForeground(Color.red);
        flag++;
    }
    
    if(vendorCombo.getSelectedItem().equals("Select"))
    {
        vendorLabel.setForeground(Color.red);
        flag++;
    }
    
    if(quantityTextField.getText().equals(""))
    {
        quantityLabel.setForeground(Color.red);
        flag++;
    }
    
    if(!ExpTextField.getText().equals(""))
    {
        exp = Integer.parseInt(ExpTextField.getText());
            }
    if(pricetypeCombo.getSelectedItem().equals("Select"))
    {
        pricetypeLabel.setForeground(Color.red);
        flag++;
    }
    
    if(BatchTextField.getText().equals(""))
    {
        batchLabel.setForeground(Color.red);
        flag++;
    }
    
//    if(BatchTextField.getText().equals(""))
//    {
//    batch = "";
//    }
//    else
//    {
//       
//    }
        
    
    if(flag==0)
    {
       
    details = DetailsTextArea.getText();
    woodtype = (String) wtypeCombo.getSelectedItem();
    cost = Integer.parseInt(costTextField.getText());
    vendor = (String) vendorCombo.getSelectedItem();
    quantity = Integer.parseInt( quantityTextField.getText());
    batch=BatchTextField.getText();
       try
       {
           Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
           Connection con=DriverManager.getConnection("jdbc:odbc:indlands","","");
           SimpleDateFormat formater = new SimpleDateFormat("MM/dd/yyyy");
           String newdate=    formater.format(billdate.getDate()); 
                     
           PreparedStatement prp=con.prepareStatement("INSERT INTO Wood (WOODTYPE,VENDOR,QUANTITY,COST,EXT_EXP,EXT_EXP_DET,TOTAL,BILLDATE,BATCH,WOOD_REM) VALUES(?,?,?,?,?,?,?,?,?,?)");
           prp.setString(1,woodtype);
           prp.setString(2,vendor);
           prp.setInt(3,quantity);
           prp.setInt(4,cost);
           prp.setInt(5,exp);
           prp.setString(6,details);
           prp.setInt(7,total);
           prp.setString(8,newdate);
           prp.setString(9, batch);
           prp.setInt(10,quantity);
           prp.executeUpdate();
           //JOptionPane.showMessageDialog(null,"Wood Details added Succesfully");
           
           if(temp == 1)
           {
              comboname.addItem(batch);
              comboname.setSelectedItem(batch);
           }
           
           wtypeCombo.setSelectedItem("Select");
           costTextField.setText("");
           vendorCombo.setSelectedItem("Select");
           quantityTextField.setText("");
           ExpTextField.setText("");
           DetailsTextArea.setText("");
           BatchTextField.setText("");
           cashLabel.setText("");
           con.commit();
           con.close();
           Functions.DisposeFunc(this);
       }
       catch(SQLException e)
       {
           JOptionPane.showMessageDialog(null,""+e);
       }
       catch(Exception e)
       {
           JOptionPane.showMessageDialog(null,"The error is : "+e);
           System.out.println(e.getMessage());
       } 
    }
}//GEN-LAST:event_saveButtonActionPerformed

    private void costTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_costTextFieldKeyReleased

        if(Functions.NumericValidate(costTextField))
        {
            if(costTextField.getText().equals(""))
            { cost = 0;}
            else
            {
                cost =Integer.parseInt( costTextField.getText());
            }
             if(ExpTextField.getText().equals(""))
            {
                exp = 0;
            }
            else
            {
                exp = Integer.parseInt(ExpTextField.getText());
            }
             if (quantityTextField.getText().equals(""))
             {
                 quantity=0;
             }
             else
                 
             {
                quantity=Integer.parseInt(quantityTextField.getText()) ;
             }
        }
         if(pricetypeCombo.getSelectedItem().equals("Per Unit"))
         {
         total =  cost*quantity+exp;
        }
        if(pricetypeCombo.getSelectedItem().equals("Total"))
         {
         total =  cost+exp;
         }
    
        
          cashLabel.setText(Integer.toString(total));
       
    }//GEN-LAST:event_costTextFieldKeyReleased

    private void quantityTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantityTextFieldKeyReleased
       
            if(Functions.NumericValidate(quantityTextField))
            {
             if(costTextField.getText().equals(""))
            { cost = 0;}
            else
            {
                cost =Integer.parseInt( costTextField.getText());
            }
             if(ExpTextField.getText().equals(""))
            {
                exp = 0;
            }
            else
            {
                exp = Integer.parseInt(ExpTextField.getText());
            }
             if (quantityTextField.getText().equals(""))
             {
                 quantity=0;
             }
             else
                 
             {
                quantity=Integer.parseInt(quantityTextField.getText()) ;
             }
        }
         if(pricetypeCombo.getSelectedItem().equals("Per Unit"))
         {
         total =  cost*quantity+exp;
        }
        if(pricetypeCombo.getSelectedItem().equals("Total"))
         {
         total =  cost+exp;
         }
    
        
          cashLabel.setText(Integer.toString(total));
       
        
    }//GEN-LAST:event_quantityTextFieldKeyReleased

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed

        dispose();
        
        // TODO add your handling code here:
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void ExpTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExpTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ExpTextFieldActionPerformed

    private void ExpTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ExpTextFieldFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_ExpTextFieldFocusGained

    private void ExpTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ExpTextFieldFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_ExpTextFieldFocusLost

    private void ExpTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ExpTextFieldKeyReleased
         if(Functions.NumericValidate(ExpTextField))
        {
            if(costTextField.getText().equals(""))
            { cost = 0;}
            else
            {
                cost =Integer.parseInt( costTextField.getText());
            }
             if(ExpTextField.getText().equals(""))
            {
                exp = 0;
            }
            else
            {
                exp = Integer.parseInt(ExpTextField.getText());
            }
             if (quantityTextField.getText().equals(""))
             {
                 quantity=0;
             }
             else
                 
             {
                quantity=Integer.parseInt(quantityTextField.getText()) ;
             }
        }
        if(pricetypeCombo.getSelectedItem().equals("Per Unit"))
         {
         total =  cost*quantity+exp;
        }
        if(pricetypeCombo.getSelectedItem().equals("Total"))
         {
         total =  cost+exp;
         }
        
        cashLabel.setText(Integer.toString(total));
    }//GEN-LAST:event_ExpTextFieldKeyReleased

    private void vendorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vendorButtonActionPerformed
      Vendor vendor=new Vendor(1,vendorCombo);            // TODO add your handling code here:
    }//GEN-LAST:event_vendorButtonActionPerformed

    private void woodButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_woodButtonActionPerformed
    String woodnew =  JOptionPane.showInputDialog(null, "Enter New Wood Type");
        while (woodnew.equals(""))
        {
            JOptionPane.showMessageDialog(null, "Please Enter New Wood Type");
            woodnew = JOptionPane.showInputDialog(null, "Enter New Wood Type");
        }
        try{
            
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
                Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
                 PreparedStatement prp=con.prepareStatement("insert into Names(WOODTYPE) values(?)");
                 prp.setString(1, woodnew);
                 prp.executeUpdate(); 
                 wtypeCombo.setSelectedItem(woodnew);
                  con.commit();
                  con.close();
        }
         
             catch(SQLException e)
            {
                JOptionPane.showMessageDialog(null,"Err is"+e);
                
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,"The error is1:"+e);
             }            // TODO add your handling code here:
    }//GEN-LAST:event_woodButtonActionPerformed

    private void BatchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BatchTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BatchTextFieldActionPerformed

    private void BatchTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BatchTextFieldFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_BatchTextFieldFocusGained

    private void BatchTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BatchTextFieldFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_BatchTextFieldFocusLost

    private void BatchTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BatchTextFieldKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_BatchTextFieldKeyReleased

    private void pricetypeComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_pricetypeComboItemStateChanged
         if(pricetypeCombo.getSelectedItem().equals("Per Unit"))
         {
         total =  cost*quantity+exp;
        }
        if(pricetypeCombo.getSelectedItem().equals("Total"))
         {
         total =  cost+exp;
         }
        
        cashLabel.setText(Integer.toString(total));
        // TODO add your handling code here:
    }//GEN-LAST:event_pricetypeComboItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Wood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Wood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Wood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Wood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Wood().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BatchTextField;
    private javax.swing.JLabel DetLabel;
    private javax.swing.JTextArea DetailsTextArea;
    private javax.swing.JLabel ExpLabel;
    private javax.swing.JTextField ExpTextField;
    private javax.swing.JLabel add_woodLable;
    private javax.swing.JLabel batchLabel;
    private org.jdesktop.swingx.JXDatePicker billdate;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel cashLabel;
    private javax.swing.JLabel costLabel;
    private javax.swing.JTextField costTextField;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox pricetypeCombo;
    private javax.swing.JLabel pricetypeLabel;
    private javax.swing.JLabel quantityLabel;
    private javax.swing.JTextField quantityTextField;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel totalLabel;
    private javax.swing.JButton vendorButton;
    private javax.swing.JComboBox vendorCombo;
    private javax.swing.JLabel vendorLabel;
    private javax.swing.JButton woodButton;
    private javax.swing.JLabel woodLabel;
    private javax.swing.JComboBox wtypeCombo;
    // End of variables declaration//GEN-END:variables
}
