/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * OurLabourDailyUpdate.java
 *
 * Created on Feb 28, 2013, 3:25:44 PM
 */
package pos;

import java.awt.*;
import java.sql.*;
import javax.swing.*;

/**
 *
 * @author Home
 */
public class OurLabourDailyUpdate extends javax.swing.JFrame {

   double total, wage, wage1, wage2, wage3, extra;
   double   mno,fno,mwage,fwage,extra1;
   int fee=0,fee1=0,fee2=0,fee3=0,cid=0,wid=0 ;
    
    //String labour1, labour2, labour3, labour4;

    /** Creates new form OurLabourDailyUpdate */
    public OurLabourDailyUpdate() {
        initComponents();
        setTitle("Labour Daily Charges");
        setSize(660,770);
        setVisible(true);
        //getContentPane().setBackground(new Color(202,225,255));
        //getContentPane().setBackground(new Color(252,206,40));
        getContentPane().setBackground(new Color(129,134,138));
        
        Functions.FillCombo(project_nameCombo, "PRONAME", "Project");
        Functions.FillCombo(nameCombo, "LABNAME", "Labour");
        Functions.FillCombo(nameCombo1, "LABNAME", "Labour");
        Functions.FillCombo(nameCombo2, "LABNAME", "Labour");
        Functions.FillCombo(nameCombo3, "LABNAME", "Labour");
             try{   Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
                Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
                Statement  st = con.createStatement();
                  ResultSet res = st.executeQuery("select * from Labourdailymain");
                  Boolean rec = res.next();
                  System.out.println("connected successfully");
                  
                  do
                  {
                     if(rec==true) {
                     wid =res.getInt(1);
                      }
                  }while (res.next());
                  
                  wid+=1 ; 
             }
               catch(SQLException e)
            {
                JOptionPane.showMessageDialog(null,""+e);
                
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,"The error is1:"+e);
                System.out.println(e.getMessage());
            }
             
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labour_daily_chargesLabel = new javax.swing.JLabel();
        project_nameLabel = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        workLabel = new javax.swing.JLabel();
        project_nameCombo = new javax.swing.JComboBox();
        workCombo = new javax.swing.JComboBox();
        jSeparator1 = new javax.swing.JSeparator();
        single_labour_chargesLabel = new javax.swing.JLabel();
        group_labour_chargesLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        wageLabel = new javax.swing.JLabel();
        nameCombo = new javax.swing.JComboBox();
        wageTextField = new javax.swing.JTextField();
        nameCombo1 = new javax.swing.JComboBox();
        wageTextField1 = new javax.swing.JTextField();
        nameCombo2 = new javax.swing.JComboBox();
        wageTextField2 = new javax.swing.JTextField();
        nameCombo3 = new javax.swing.JComboBox();
        wageTextField3 = new javax.swing.JTextField();
        extra_expenseLabel = new javax.swing.JLabel();
        extra_expenseTextField = new javax.swing.JTextField();
        detailsLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        detailsTextArea = new javax.swing.JTextArea();
        totalLabel = new javax.swing.JLabel();
        label_total = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        maleLabel = new javax.swing.JLabel();
        mnoLabel = new javax.swing.JLabel();
        mnoTextField = new javax.swing.JTextField();
        mwageLabel = new javax.swing.JLabel();
        mwageTextField = new javax.swing.JTextField();
        femaleLabel = new javax.swing.JLabel();
        fwageTextField = new javax.swing.JTextField();
        fwageLabel = new javax.swing.JLabel();
        fnoTextField = new javax.swing.JTextField();
        fnoLabel = new javax.swing.JLabel();
        detailsLabel1 = new javax.swing.JLabel();
        extra_expenseLabel1 = new javax.swing.JLabel();
        extra_expenseTextField1 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        detailsTextArea1 = new javax.swing.JTextArea();
        label_total1 = new javax.swing.JLabel();
        totalLabel1 = new javax.swing.JLabel();
        datePicker = new org.jdesktop.swingx.JXDatePicker();
        type_of_woodLabel = new javax.swing.JLabel();
        quantity_usedLabel = new javax.swing.JLabel();
        type_of_woodTextField = new javax.swing.JTextField();
        quantity_usedTextField = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        labour_daily_chargesLabel.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        labour_daily_chargesLabel.setForeground(new java.awt.Color(0, 102, 102));
        labour_daily_chargesLabel.setText("Labour Daily Charges");

        project_nameLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        project_nameLabel.setText("Project Name");

        dateLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        dateLabel.setText("Date");

        workLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        workLabel.setText("Work");

        project_nameCombo.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        project_nameCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select" }));
        project_nameCombo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                project_nameComboFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                project_nameComboFocusLost(evt);
            }
        });

        workCombo.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        workCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "Carpentary", "Centering", "Electrical", "Flooring", "Laterate", "Painting", "Plastering", "Plumbing" }));
        workCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                workComboItemStateChanged(evt);
            }
        });
        workCombo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                workComboFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                workComboFocusLost(evt);
            }
        });

        single_labour_chargesLabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        single_labour_chargesLabel.setForeground(new java.awt.Color(0, 102, 102));
        single_labour_chargesLabel.setText("Single Labour Charges");

        group_labour_chargesLabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        group_labour_chargesLabel.setForeground(new java.awt.Color(0, 102, 102));
        group_labour_chargesLabel.setText("Group Labour Charges");

        nameLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        nameLabel.setText("Name");

        wageLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        wageLabel.setText("Wage");

        nameCombo.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        nameCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select" }));
        nameCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                nameComboItemStateChanged(evt);
            }
        });

        wageTextField.setEnabled(false);
        wageTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                wageTextFieldFocusLost(evt);
            }
        });
        wageTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                wageTextFieldKeyReleased(evt);
            }
        });

        nameCombo1.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        nameCombo1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select" }));
        nameCombo1.setEnabled(false);
        nameCombo1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                nameCombo1MouseEntered(evt);
            }
        });
        nameCombo1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                nameCombo1ItemStateChanged(evt);
            }
        });

        wageTextField1.setEnabled(false);
        wageTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                wageTextField1FocusLost(evt);
            }
        });
        wageTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                wageTextField1KeyReleased(evt);
            }
        });

        nameCombo2.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        nameCombo2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select" }));
        nameCombo2.setEnabled(false);
        nameCombo2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                nameCombo2MouseEntered(evt);
            }
        });
        nameCombo2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                nameCombo2ItemStateChanged(evt);
            }
        });

        wageTextField2.setEnabled(false);
        wageTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wageTextField2ActionPerformed(evt);
            }
        });
        wageTextField2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                wageTextField2FocusLost(evt);
            }
        });
        wageTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                wageTextField2KeyReleased(evt);
            }
        });

        nameCombo3.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        nameCombo3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select" }));
        nameCombo3.setEnabled(false);
        nameCombo3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                nameCombo3MouseEntered(evt);
            }
        });
        nameCombo3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                nameCombo3ItemStateChanged(evt);
            }
        });

        wageTextField3.setEnabled(false);
        wageTextField3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                wageTextField3FocusLost(evt);
            }
        });
        wageTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                wageTextField3KeyReleased(evt);
            }
        });

        extra_expenseLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        extra_expenseLabel.setText("Extra Expense");

        extra_expenseTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                extra_expenseTextFieldKeyReleased(evt);
            }
        });

        detailsLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        detailsLabel.setText("Details");

        detailsTextArea.setColumns(15);
        detailsTextArea.setRows(5);
        jScrollPane1.setViewportView(detailsTextArea);

        totalLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        totalLabel.setText("Total");

        label_total.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        label_total.setForeground(new java.awt.Color(255, 0, 0));
        label_total.setText("Cash");

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        maleLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        maleLabel.setForeground(new java.awt.Color(0, 102, 102));
        maleLabel.setText("Male");

        mnoLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        mnoLabel.setText("No :");

        mnoTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                mnoTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                mnoTextFieldFocusLost(evt);
            }
        });
        mnoTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                mnoTextFieldKeyReleased(evt);
            }
        });

        mwageLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        mwageLabel.setText("Wage");

        mwageTextField.setEnabled(false);
        mwageTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                mwageTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                mwageTextFieldFocusLost(evt);
            }
        });
        mwageTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                mwageTextFieldKeyReleased(evt);
            }
        });

        femaleLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        femaleLabel.setForeground(new java.awt.Color(0, 102, 102));
        femaleLabel.setText("Female");

        fwageTextField.setEnabled(false);
        fwageTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fwageTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fwageTextFieldFocusLost(evt);
            }
        });
        fwageTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fwageTextFieldKeyReleased(evt);
            }
        });

        fwageLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        fwageLabel.setText("Wage");

        fnoTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fnoTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fnoTextFieldFocusLost(evt);
            }
        });
        fnoTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fnoTextFieldKeyReleased(evt);
            }
        });

        fnoLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        fnoLabel.setText("No :");

        detailsLabel1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        detailsLabel1.setText("Details");

        extra_expenseLabel1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        extra_expenseLabel1.setText("Extra Expense");

        extra_expenseTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                extra_expenseTextField1KeyReleased(evt);
            }
        });

        detailsTextArea1.setColumns(15);
        detailsTextArea1.setRows(5);
        jScrollPane2.setViewportView(detailsTextArea1);

        label_total1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        label_total1.setForeground(new java.awt.Color(255, 0, 0));
        label_total1.setText("Cash");

        totalLabel1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        totalLabel1.setText("Total");

        type_of_woodLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        type_of_woodLabel.setText("Type Of Wood");
        type_of_woodLabel.setEnabled(false);

        quantity_usedLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        quantity_usedLabel.setText("Quantity Used");
        quantity_usedLabel.setEnabled(false);

        type_of_woodTextField.setEnabled(false);
        type_of_woodTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                type_of_woodTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                type_of_woodTextFieldFocusLost(evt);
            }
        });

        quantity_usedTextField.setEnabled(false);
        quantity_usedTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                quantity_usedTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                quantity_usedTextFieldFocusLost(evt);
            }
        });

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jButton1.setText("Cancel");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(nameCombo1, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(nameCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(nameCombo2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(nameCombo3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(extra_expenseLabel))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(wageTextField3, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(wageTextField2, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(wageTextField1, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(wageTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(extra_expenseTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(detailsLabel1)
                                            .addComponent(totalLabel))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(label_total, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addComponent(nameLabel)
                                .addGap(108, 108, 108)
                                .addComponent(wageLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(single_labour_chargesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(33, 33, 33)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(102, 102, 102)
                                .addComponent(maleLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(142, 142, 142)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(fwageLabel)
                                    .addComponent(mwageLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(mwageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fwageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(group_labour_chargesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(extra_expenseTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addGap(44, 44, 44)
                                                .addComponent(totalLabel1)))
                                        .addGap(45, 45, 45)
                                        .addComponent(label_total1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(mnoLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(mnoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(fnoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(60, 60, 60)
                                                .addComponent(femaleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(fnoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addComponent(extra_expenseLabel1)
                                    .addComponent(detailsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jSeparator1))
                .addGap(656, 656, 656))
            .addGroup(layout.createSequentialGroup()
                .addGap(172, 172, 172)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labour_daily_chargesLabel)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(quantity_usedLabel)
                            .addGap(18, 18, 18)
                            .addComponent(quantity_usedTextField))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(dateLabel)
                                        .addComponent(workLabel)
                                        .addComponent(project_nameLabel))
                                    .addGap(26, 26, 26))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(type_of_woodLabel)
                                    .addGap(18, 18, 18)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(datePicker, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                                .addComponent(workCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(project_nameCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(type_of_woodTextField)))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(labour_daily_chargesLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(project_nameLabel)
                    .addComponent(project_nameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(workCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(workLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateLabel)
                    .addComponent(datePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(type_of_woodLabel)
                    .addComponent(type_of_woodTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quantity_usedLabel)
                    .addComponent(quantity_usedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(single_labour_chargesLabel)
                            .addComponent(group_labour_chargesLabel))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(wageLabel)
                                    .addComponent(nameLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(nameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(wageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(maleLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(mnoLabel)
                                    .addComponent(mnoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(mwageLabel)
                                    .addComponent(mwageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(nameCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(wageTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nameCombo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(wageTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(femaleLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(fnoLabel)
                                    .addComponent(fnoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(fwageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fwageLabel))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(nameCombo3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(wageTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(extra_expenseLabel)
                                    .addComponent(extra_expenseTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(detailsLabel1)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(extra_expenseLabel1)
                                    .addComponent(extra_expenseTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(detailsLabel)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(totalLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(label_total)
                                    .addComponent(totalLabel))
                                .addGap(13, 13, 13)
                                .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(label_total1)))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void project_nameComboFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_project_nameComboFocusGained

    project_nameLabel.setForeground(Color.black);
    
    // TODO add your handling code here:
}//GEN-LAST:event_project_nameComboFocusGained

private void project_nameComboFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_project_nameComboFocusLost
    
    if(project_nameCombo.getSelectedItem().equals("Select"))
    {
        project_nameLabel.setForeground(Color.red);
    }
    
    // TODO add your handling code here:
}//GEN-LAST:event_project_nameComboFocusLost

private void workComboFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_workComboFocusGained
    
    workLabel.setForeground(Color.black);
    if(project_nameCombo.getSelectedItem().equals("Select"))
    {
        project_nameLabel.setForeground(Color.red);
    }
    
    // TODO add your handling code here:
}//GEN-LAST:event_workComboFocusGained

private void workComboFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_workComboFocusLost

    if(workCombo.getSelectedItem().equals("Select"))
    {
        workLabel.setForeground(Color.red);
    }
    
    // TODO add your handling code here:
}//GEN-LAST:event_workComboFocusLost

private void nameComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_nameComboItemStateChanged

    if(nameCombo.getSelectedItem().equals("Select"))
    {
        wageTextField.setText("");
        wageTextField.setEnabled(false);
        
        if(nameCombo1.getSelectedItem().equals("Select") || wageTextField1.getText().equals(""))
        {
            nameCombo1.setSelectedItem("Select");
            wageTextField1.setText("");
            nameCombo1.setEnabled(false);
            wageTextField1.setEnabled(false);
        }
        
        if(nameCombo2.getSelectedItem().equals("Select") || wageTextField2.getText().equals(""))
        {
            nameCombo2.setSelectedItem("Select");
            wageTextField2.setText("");
            nameCombo2.setEnabled(false);
            wageTextField2.setEnabled(false);
        }
        
        if(nameCombo3.getSelectedItem().equals("Select") || wageTextField3.getText().equals(""))
        {
            nameCombo3.setSelectedItem("Select");
            wageTextField3.setText("");
            nameCombo3.setEnabled(false);
            wageTextField3.setEnabled(false);
        }
        
        if(!extra_expenseTextField.getText().equals(""))
        {
            extra = Double  .parseDouble  (extra_expenseTextField.getText());
            label_total.setText(Double  .toString(extra));
        }
        else
        {
            label_total.setText("Cash");
        }
    }
    else
    {
        wageTextField.setEnabled(true);
        
        //nameCombo1.setEnabled(true);
        //wageTextField1.setEnabled(true);
    }

    // TODO add your handling code here:
}//GEN-LAST:event_nameComboItemStateChanged

private void nameCombo1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_nameCombo1ItemStateChanged

    if(nameCombo1.getSelectedItem().equals("Select"))
    {
        wageTextField1.setText("");
        wageTextField1.setEnabled(false);
        
        if(nameCombo2.getSelectedItem().equals("Select") || wageTextField2.getText().equals(""))
        {
            nameCombo2.setSelectedItem("Select");
            nameCombo2.setEnabled(false);
            wageTextField2.setText("");
            wageTextField2.setEnabled(false);
        }
        
        if(nameCombo3.getSelectedItem().equals("Select") || wageTextField3.getText().equals(""))
        {
            nameCombo3.setSelectedItem("Select");
            nameCombo3.setEnabled(false);
            wageTextField3.setText("");
            wageTextField3.setEnabled(false);
        }
        
        if(!extra_expenseTextField.getText().equals(""))
        {
            extra = Double  .parseDouble  (extra_expenseTextField.getText());
        } else extra = (Double) 0.0;
        if(!wageTextField.getText().equals(""))
        {
            wage = Double  .parseDouble  (wageTextField.getText());
        } else wage = (Double) 0.0;
        
        total = wage + extra;
        label_total.setText(Double  .toString(total));
    }
    else
    {
        wageTextField1.setEnabled(true);
    }
    
    // TODO add your handling code here:
}//GEN-LAST:event_nameCombo1ItemStateChanged

private void nameCombo2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_nameCombo2ItemStateChanged

    if(nameCombo2.getSelectedItem().equals("Select"))
    {
        wageTextField2.setText("");
        wageTextField2.setEnabled(false);
        
        if(nameCombo3.getSelectedItem().equals("Select") || wageTextField1.getText().equals(""))
        {
            nameCombo3.setSelectedItem("Select");
            nameCombo3.setEnabled(false);
            wageTextField3.setText("");
            wageTextField3.setEnabled(false);
        }
        
        if(!extra_expenseTextField.getText().equals(""))
        {
            extra = Double  .parseDouble  (extra_expenseTextField.getText());
        } else extra = (Double) 0.0;
        if(!wageTextField.getText().equals(""))
        {
            wage = Double  .parseDouble  (wageTextField.getText());
        } else wage = (Double) 0.0;
        if(!wageTextField1.getText().equals(""))
        {
            wage1 = Double  .parseDouble  (wageTextField1.getText());
        } else wage1 = (Double) 0.0;
        
        total = wage + wage1 + extra;
        label_total.setText(Double  .toString(total));        
    }
    else
    {
        wageTextField2.setEnabled(true);
    }
    
    // TODO add your handling code here:
}//GEN-LAST:event_nameCombo2ItemStateChanged

private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
    String pname = (String)project_nameCombo.getSelectedItem();
    String work  = (String)workCombo.getSelectedItem();
    String labour  =(String) nameCombo.getSelectedItem();
    String labour1 =(String) nameCombo1.getSelectedItem();
    String labour2 =(String) nameCombo2.getSelectedItem();
    String labour3 =(String) nameCombo3.getSelectedItem();
    
     //fee1   = Integer.parseInt(wageTextField1.getText());
     //fee2   = Integer.parseInt(wageTextField2.getText());
    // fee3   = Integer.parseInt(wageTextField3.getText());
   int flag = 0;
    if(project_nameCombo.getSelectedItem().equals("Select"))
    {   project_nameLabel.setForeground(Color.red);
        flag++;
    }
      if(workCombo.getSelectedItem().equals("Select"))
    {   workLabel.setForeground(Color.red);
        flag++;
    }
     if(workCombo.getSelectedItem().equals("Carpentary") && type_of_woodTextField.getText().equals(""))
    {   type_of_woodLabel.setForeground(Color.red);
        flag++;
    }
     if(workCombo.getSelectedItem().equals("Carpentary") && quantity_usedTextField.getText().equals(""))
    {   quantity_usedLabel.setForeground(Color.red);
        flag++;
    }
     if((!labour.equals("Select") && wage==0))
    {   wageTextField.setBackground(Color.PINK);
        flag++;
    }
     if((!labour1.equals("Select") && wage1==0))
    {   wageTextField1.setBackground(Color.PINK);
        flag++;
    }
     if((!labour2.equals("Select") && wage2==0))
    {
        wageTextField2.setBackground(Color.PINK);
        flag++;
    }
    if((!labour3.equals("Select") && wage3==0))
    {
        wageTextField3.setBackground(Color.PINK);
        flag++;
    }
    if(!mnoTextField.getText().equals("") && mwageTextField.getText().equals(""))
    {
        mwageLabel.setForeground(Color.red);
        flag++;
    }
     if(mnoTextField.getText().equals("") && !mwageTextField.getText().equals(""))
    {
        mnoLabel.setForeground(Color.red);
        flag++;
    }
    if(!fnoTextField.getText().equals("") && fwageTextField.getText().equals(""))
    {
        fwageLabel.setForeground(Color.red);
        flag++;
    }
    if(fnoTextField.getText().equals("") && !fwageTextField.getText().equals(""))
    {
        fnoLabel.setForeground(Color.red);
        flag++;
    }
   if (flag==0){
        if  (!labour.equals("Select"))
           {   fee    = Integer.parseInt(wageTextField.getText()); 
               
                  try { Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
                  Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
                  Statement  st = con.createStatement();
                  ResultSet res = st.executeQuery("select * from Labourdailysub");
                  Boolean rec = res.next();
                  System.out.println("connected successfully");
                  
                  do
                  {
                     if(rec==true) {
                      cid =res.getInt(7);
                      }
                  }while (res.next());
                  
                  cid+=1 ; 
                  java.sql.Date sqlDate = new java.sql.Date(new java.util.Date().getTime());
                  PreparedStatement prp=con.prepareStatement("insert into Labourdailysub values(?,?,?,?,?,?,?)");    
                        prp.setString(1,pname);
                        prp.setString(2,work);
                        prp.setDate(3,sqlDate);  
                        prp.setString(4,labour);
                        prp.setInt(5,fee);
                        prp.setInt(6, wid);
                        prp.setInt(7,cid);
                        prp.executeUpdate(); 
                        //JOptionPane.showMessageDialog(null,"Project added succesfully");
                         con.commit();
                         con.close();}                               
             catch(SQLException e)
             {JOptionPane.showMessageDialog(null,"1"+e); }
            catch(Exception e)
            { JOptionPane.showMessageDialog(null,"The 1st error is:"+e);
                System.out.println(e.getMessage());}
            }      
        if  (!labour1.equals("Select"))
           {   fee1    = Integer.parseInt(wageTextField1.getText()); 
               
                  try { Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
                  Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
                  Statement  st = con.createStatement();
                  ResultSet res = st.executeQuery("select * from Labourdailysub");
                  Boolean rec = res.next();
                  System.out.println("connected successfully");
                  
                  do
                  {
                     if(rec==true) {
                      cid =res.getInt(7);
                      }
                  }while (res.next());
                  
                  cid+=1 ; 
                  java.sql.Date sqlDate = new java.sql.Date(new java.util.Date().getTime());
                  PreparedStatement prp=con.prepareStatement("insert into Labourdailysub values(?,?,?,?,?,?,?)");    
                        prp.setString(1,pname);
                        prp.setString(2,work);
                        prp.setDate(3,sqlDate);  
                        prp.setString(4,labour1);
                        prp.setInt(5,fee1);
                        prp.setInt(6, wid);
                        prp.setInt(7,cid);
                        prp.executeUpdate(); 
                        //JOptionPane.showMessageDialog(null,"Project added succesfully");
                         con.commit();
                         con.close();}                               
             catch(SQLException e)
             {JOptionPane.showMessageDialog(null,"1"+e); }
            catch(Exception e)
            { JOptionPane.showMessageDialog(null,"The 1st error is:"+e);
                System.out.println(e.getMessage());}
            } 
          if  (!labour2.equals("Select"))
           {   fee2    = Integer.parseInt(wageTextField2.getText()); 
               
                  try { Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
                  Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
                  Statement  st = con.createStatement();
                  ResultSet res = st.executeQuery("select * from Labourdailysub");
                  Boolean rec = res.next();
                  System.out.println("connected successfully");
                  
                  do
                  {
                     if(rec==true) {
                      cid =res.getInt(7);
                      }
                  }while (res.next());
                  
                  cid+=1 ; 
                  java.sql.Date sqlDate = new java.sql.Date(new java.util.Date().getTime());
                  PreparedStatement prp=con.prepareStatement("insert into Labourdailysub values(?,?,?,?,?,?,?)");    
                        prp.setString(1,pname);
                        prp.setString(2,work);
                        prp.setDate(3,sqlDate);  
                        prp.setString(4,labour2);
                        prp.setInt(5,fee2);
                        prp.setInt(6, wid);
                        prp.setInt(7,cid);
                        prp.executeUpdate(); 
                        //JOptionPane.showMessageDialog(null,"Project added succesfully");
                         con.commit();
                         con.close();}                               
             catch(SQLException e)
             {JOptionPane.showMessageDialog(null,"1"+e); }
            catch(Exception e)
            { JOptionPane.showMessageDialog(null,"The 1st error is:"+e);
                System.out.println(e.getMessage());}
            } 
            if  (!labour3.equals("Select"))
           {   fee3    = Integer.parseInt(wageTextField3.getText()); 
               
                  try { Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
                  Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
                  Statement  st = con.createStatement();
                  ResultSet res = st.executeQuery("select * from Labourdailysub");
                  Boolean rec = res.next();
                  System.out.println("connected successfully");
                  
                  do
                  {
                     if(rec==true) {
                      cid =res.getInt(7);
                      }
                  }while (res.next());
                  
                  cid+=1 ; 
                  java.sql.Date sqlDate = new java.sql.Date(new java.util.Date().getTime());
                  PreparedStatement prp=con.prepareStatement("insert into Labourdailysub values(?,?,?,?,?,?,?)");    
                        prp.setString(1,pname);
                        prp.setString(2,work);
                        prp.setDate(3,sqlDate);  
                        prp.setString(4,labour3);
                        prp.setInt(5,fee3);
                        prp.setInt(6, wid);
                        prp.setInt(7,cid);
                        prp.executeUpdate(); 
                        //JOptionPane.showMessageDialog(null,"Project added succesfully");
                         con.commit();
                         con.close();}                               
             catch(SQLException e)
             {JOptionPane.showMessageDialog(null,"1"+e); }
            catch(Exception e)
            { JOptionPane.showMessageDialog(null,"The 1st error is:"+e);
                System.out.println(e.getMessage());}
            } 
            if  (!labour1.equals("Select"))
           {          fee3    = Integer.parseInt(wageTextField3.getText()); 
               int ext_exp    = Integer.parseInt(extra_expenseTextField.getText());
               int lab_wage =  fee+fee1+fee2+fee3 ;
               String ext_exp_det = detailsTextArea.getText();
               int grp_man_no = Integer.parseInt(mnoTextField.getText());
               int grp_wom_no = Integer.parseInt(fnoTextField.getText());
               int grp_man_wage = Integer.parseInt(mwageTextField.getText());
               int grp_wom_wage = Integer.parseInt(fwageTextField.getText());
               int grp_ext_exp = Integer.parseInt(extra_expenseTextField1.getText());
               String grp_ext_det = detailsTextArea1.getText();
               String wtype = type_of_woodTextField.getText();
               int wquan    =Integer.parseInt(quantity_usedTextField.getText());
               int tot = lab_wage+ (grp_man_no*grp_man_wage)+(grp_wom_no*grp_wom_wage);
               
               
               
                       
                  try { Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
                  Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
                  Statement  st = con.createStatement();
                  ResultSet res = st.executeQuery("select * from Labourdailysub");
                  ResultSet res1 = st.executeQuery("select COST from Wood where WOODTYPE= '"+wtype+"");
                  Boolean rec = res.next();
                  System.out.println("connected successfully");
                  
                  do
                  {
                     if(rec==true) {
                      cid =res.getInt(7);
                      }
                  }while (res.next());
                  
                  cid+=1 ; 
                  java.sql.Date sqlDate = new java.sql.Date(new java.util.Date().getTime());
                  PreparedStatement prp=con.prepareStatement("insert into Labourdailysub values(?,?,?,?,?,?,?)");    
                       prp.setString(1,pname);
                        prp.setString(2,work);
                        prp.setDate(3,sqlDate);  
                        prp.setInt(4,lab_wage);
                        prp.setInt(5,ext_exp);
                        prp.setString(6,ext_exp_det);
                        prp.setInt(7,grp_man_no);
                        prp.setInt(8,grp_man_wage);
                        prp.setInt(9,grp_wom_no);        
                        prp.setInt(10,grp_wom_wage); 
                        prp.setInt(11,grp_ext_exp);
                        prp.setString(12, grp_ext_det);
                        prp.setString(13,wtype);
                        prp.setInt(14, wquan);
                        prp.setInt(15,tot);
                        prp.setInt(16,wid);
                        prp.setInt(17, wcost);
                        prp.executeUpdate(); 
                        //JOptionPane.showMessageDialog(null,"Project added succesfully");
                         con.commit();
                         con.close();}                               
             catch(SQLException e)
             {JOptionPane.showMessageDialog(null,"1"+e); }
            catch(Exception e)
            { JOptionPane.showMessageDialog(null,"The 1st error is:"+e);
                System.out.println(e.getMessage());}
            } 
            
            
   }
   
}//GEN-LAST:event_addButtonActionPerformed

private void wageTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_wageTextFieldKeyReleased

    if(Functions.NumericValidate(wageTextField))
    {
        wageTextField.setBackground(Color.WHITE);
        nameCombo1.setEnabled(true);
        //wageTextField1.setEnabled(true);
        
        if(wageTextField.getText().equals(""))
        {
            wage=0;
            
            if(nameCombo1.getSelectedItem().equals("Select") || wageTextField1.getText().equals(""))
            {
                nameCombo1.setSelectedItem("Select");
                wageTextField1.setText("");
                nameCombo1.setEnabled(false);
                wageTextField1.setEnabled(false);
            }
            
            if(nameCombo2.getSelectedItem().equals("Select") || wageTextField2.getText().equals(""))
            {
                nameCombo2.setSelectedItem("Select");
                wageTextField2.setText("");
                nameCombo2.setEnabled(false);
                wageTextField2.setEnabled(false);
            }
            
            if(nameCombo3.getSelectedItem().equals("Select") || wageTextField3.getText().equals(""))
            {
                nameCombo3.setSelectedItem("Select");
                wageTextField3.setText("");
                nameCombo3.setEnabled(false);
                wageTextField3.setEnabled(false);
            }
        }
        if(wageTextField1.getText().equals(""))
        {
            wage1=0;
        }
        if(wageTextField2.getText().equals(""))
        {
            wage2=0;
        }
        if(wageTextField3.getText().equals(""))
        {
            wage3=0;
        }
        if(!wageTextField.getText().equals(""))
        {
            wage = Double  .parseDouble  (wageTextField.getText());
        }
        if(!wageTextField1.getText().equals(""))
        {
            wage1 = Double  .parseDouble  (wageTextField1.getText());
        }
        if(!wageTextField2.getText().equals(""))
        {
            wage2 = Double  .parseDouble  (wageTextField2.getText());
        }
        if(!wageTextField3.getText().equals(""))
        {
            wage3 = Double  .parseDouble  (wageTextField3.getText());
        }
        if(extra_expenseTextField.getText().equals(""))
        {
            extra=0;
        }
        if(!extra_expenseTextField.getText().equals(""))
        {
            extra = Double  .parseDouble  (extra_expenseTextField.getText());
        }
        total = wage+wage1+wage2+wage3+extra;
        label_total.setText(Double  .toString(total));
    }
    
    // TODO add your handling code here:
}//GEN-LAST:event_wageTextFieldKeyReleased

private void wageTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_wageTextField1KeyReleased
    
    if(Functions.NumericValidate(wageTextField1))
    {
        wageTextField1.setBackground(Color.WHITE);
        nameCombo2.setEnabled(true);
        //wageTextField2.setEnabled(true);
        
        if(wageTextField.getText().equals(""))
        {
            wage=0;
        }
        if(wageTextField1.getText().equals(""))
        {
            wage1=0;
            
            if(nameCombo2.getSelectedItem().equals("Select") || wageTextField2.getText().equals(""))
            {
                nameCombo2.setSelectedItem("Select");
                wageTextField2.setText("");
                nameCombo2.setEnabled(false);
                wageTextField2.setEnabled(false);
            }
            
            if(nameCombo3.getSelectedItem().equals("Select") || wageTextField3.getText().equals(""))
            {
                nameCombo3.setSelectedItem("Select");
                wageTextField3.setText("");
                nameCombo3.setEnabled(false);
                wageTextField3.setEnabled(false);
            }
        }
        if(wageTextField2.getText().equals(""))
        {
            wage2=0;
        }
        if(wageTextField3.getText().equals(""))
        {
            wage3=0;
        }
        if(!wageTextField.getText().equals(""))
        {
            wage = Double  .parseDouble  (wageTextField.getText());
        }
        if(!wageTextField1.getText().equals(""))
        {
            wage1 = Double  .parseDouble  (wageTextField1.getText());
        }
        if(!wageTextField2.getText().equals(""))
        {
            wage2 = Double  .parseDouble  (wageTextField2.getText());
        }
        if(!wageTextField3.getText().equals(""))
        {
            wage3 = Double  .parseDouble  (wageTextField3.getText());
        }
        if(extra_expenseTextField.getText().equals(""))
        {
            extra=0;
        }
        if(!extra_expenseTextField.getText().equals(""))
        {
            extra = Double  .parseDouble  (extra_expenseTextField.getText());
        }
        total = wage+wage1+wage2+wage3+extra;
        label_total.setText(Double  .toString(total));
    }
    
    // TODO add your handling code here:
}//GEN-LAST:event_wageTextField1KeyReleased

private void wageTextField2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_wageTextField2KeyReleased

    if(Functions.NumericValidate(wageTextField2))
    {
        wageTextField2.setBackground(Color.WHITE);
        nameCombo3.setEnabled(true);
        //wageTextField3.setEnabled(true);
        
        if(wageTextField.getText().equals(""))
        {
            wage=0;
        }
        if(wageTextField1.getText().equals(""))
        {
            wage1=0;
        }
        if(wageTextField2.getText().equals(""))
        {
            wage2=0;
            
            if(nameCombo3.getSelectedItem().equals("Select") || wageTextField3.getText().equals(""))
            {
                nameCombo3.setSelectedItem("Select");
                wageTextField3.setText("");
                nameCombo3.setEnabled(false);
                wageTextField3.setEnabled(false);
            }
        }
        if(wageTextField3.getText().equals(""))
        {
            wage3=0;
        }
        if(!wageTextField.getText().equals(""))
        {
            wage = Double  .parseDouble  (wageTextField.getText());
        }
        if(!wageTextField1.getText().equals(""))
        {
            wage1 = Double  .parseDouble  (wageTextField1.getText());
        }
        if(!wageTextField2.getText().equals(""))
        {
            wage2 = Double  .parseDouble  (wageTextField2.getText());
        }
        if(!wageTextField3.getText().equals(""))
        {
            wage3 = Double  .parseDouble  (wageTextField3.getText());
        }
        if(extra_expenseTextField.getText().equals(""))
        {
            extra=0;
        }
        if(!extra_expenseTextField.getText().equals(""))
        {
            extra = Double  .parseDouble  (extra_expenseTextField.getText());
        }
        total = wage+wage1+wage2+wage3+extra;
        label_total.setText(Double  .toString(total));
    }
    
    // TODO add your handling code here:
}//GEN-LAST:event_wageTextField2KeyReleased

private void wageTextField3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_wageTextField3KeyReleased

    if(Functions.NumericValidate(wageTextField3))
    {
        wageTextField3.setBackground(Color.WHITE);
        if(wageTextField.getText().equals(""))
        {
            wage=0;
        }
        if(wageTextField1.getText().equals(""))
        {
            wage1=0;
        }
        if(wageTextField2.getText().equals(""))
        {
            wage2=0;
        }
        if(wageTextField3.getText().equals(""))
        {
            wage3=0;
        }
        if(!wageTextField.getText().equals(""))
        {
            wage = Double  .parseDouble  (wageTextField.getText());
        }
        if(!wageTextField1.getText().equals(""))
        {
            wage1 = Double  .parseDouble  (wageTextField1.getText());
        }
        if(!wageTextField2.getText().equals(""))
        {
            wage2 = Double  .parseDouble  (wageTextField2.getText());
        }
        if(!wageTextField3.getText().equals(""))
        {
            wage3 = Double  .parseDouble  (wageTextField3.getText());
        }
        if(extra_expenseTextField.getText().equals(""))
        {
            extra=0;
        }
        if(!extra_expenseTextField.getText().equals(""))
        {
            extra = Double  .parseDouble  (extra_expenseTextField.getText());
        }
        total = wage+wage1+wage2+wage3+extra;
        label_total.setText(Double  .toString(total));
    }
    
    // TODO add your handling code here:
}//GEN-LAST:event_wageTextField3KeyReleased

private void extra_expenseTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_extra_expenseTextFieldKeyReleased

    if(Functions.NumericValidate(extra_expenseTextField))
    {
        if(wageTextField.getText().equals(""))
        {
            wage=0;
        }
        if(wageTextField1.getText().equals(""))
        {
            wage1=0;
        }
        if(wageTextField2.getText().equals(""))
        {
            wage2=0;
        }
        if(wageTextField3.getText().equals(""))
        {
            wage3=0;
        }
        if(!wageTextField.getText().equals(""))
        {
            wage = Double  .parseDouble  (wageTextField.getText());
        }
        if(!wageTextField1.getText().equals(""))
        {
            wage1 = Double  .parseDouble  (wageTextField1.getText());
        }
        if(!wageTextField2.getText().equals(""))
        {
            wage2 = Double  .parseDouble  (wageTextField2.getText());
        }
        if(!wageTextField3.getText().equals(""))
        {
            wage3 = Double  .parseDouble  (wageTextField3.getText());
        }
        if(extra_expenseTextField.getText().equals(""))
        {
            extra=0;
        }
        if(!extra_expenseTextField.getText().equals(""))
        {
            extra = Double  .parseDouble  (extra_expenseTextField.getText());
        }
        total = wage+wage1+wage2+wage3+extra;
        label_total.setText(Double  .toString(total));
    }
    
    // TODO add your handling code here:
}//GEN-LAST:event_extra_expenseTextFieldKeyReleased

private void mnoTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mnoTextFieldKeyReleased

    if(Functions.NumericValidate(mnoTextField))
    {
        if(mnoTextField.getText().equals(""))
        {
            mno=0;
            mwageTextField.setEnabled(false);
        }
        if(mwageTextField.getText().equals(""))
        {
            mwage=0;
        }
        if(fnoTextField.getText().equals(""))
        {
            fno=0;
        }
        if(fwageTextField.getText().equals(""))
        {
            fwage=0;
        }
        if(extra_expenseTextField1.getText().equals(""))
        {
            extra1=0;
        }
        if(!mnoTextField.getText().equals(""))
        {
            mno = Double  .parseDouble  (mnoTextField.getText());
            mwageTextField.setEnabled(true);
        }
        if(!mwageTextField.getText().equals(""))
        {
            mwage = Double  .parseDouble  (mwageTextField.getText());
        }
        if(!fnoTextField.getText().equals(""))
        {
            fno = Double  .parseDouble  (fnoTextField.getText());
        }
        if(!fwageTextField.getText().equals(""))
        {
            fwage = Double  .parseDouble  (fwageTextField.getText());
        }
        if(!extra_expenseTextField1.getText().equals(""))
        {
            extra1 = Double  .parseDouble  (extra_expenseTextField1.getText());
        }
        total = (mno*mwage)+(fno*fwage)+extra1;
        label_total1.setText(Double  .toString(total));
    }
    
    // TODO add your handling code here:
}//GEN-LAST:event_mnoTextFieldKeyReleased

private void mwageTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mwageTextFieldKeyReleased

    if(Functions.NumericValidate(mwageTextField))
    {
        if(mnoTextField.getText().equals(""))
        {
            mno=0;
        }
        if(mwageTextField.getText().equals(""))
        {
            mwage=0;
        }
        if(fnoTextField.getText().equals(""))
        {
            fno=0;
        }
        if(fwageTextField.getText().equals(""))
        {
            fwage=0;
        }
        if(extra_expenseTextField1.getText().equals(""))
        {
            extra1=0;
        }
        if(!mnoTextField.getText().equals(""))
        {
            mno = Double  .parseDouble  (mnoTextField.getText());
        }
        if(!mwageTextField.getText().equals(""))
        {
            mwage = Double  .parseDouble  (mwageTextField.getText());
        }
        if(!fnoTextField.getText().equals(""))
        {
            fno = Double  .parseDouble  (fnoTextField.getText());
        }
        if(!fwageTextField.getText().equals(""))
        {
            fwage = Double  .parseDouble  (fwageTextField.getText());
        }
        if(!extra_expenseTextField1.getText().equals(""))
        {
            extra1 = Double  .parseDouble  (extra_expenseTextField1.getText());
        }
        total = (mno*mwage)+(fno*fwage)+extra1;
        label_total1.setText(Double  .toString(total));
    }
    
    // TODO add your handling code here:
}//GEN-LAST:event_mwageTextFieldKeyReleased

private void fnoTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fnoTextFieldKeyReleased

    if(Functions.NumericValidate(fnoTextField))
    {
        if(mnoTextField.getText().equals(""))
        {
            mno=0;
        }
        if(mwageTextField.getText().equals(""))
        {
            mwage=0;
        }
        if(fnoTextField.getText().equals(""))
        {
            fno=0;
            fwageTextField.setEnabled(false);
        }
        if(fwageTextField.getText().equals(""))
        {
            fwage=0;
        }
        if(extra_expenseTextField1.getText().equals(""))
        {
            extra1=0;
        }
        if(!mnoTextField.getText().equals(""))
        {
            mno = Double  .parseDouble  (mnoTextField.getText());
        }
        if(!mwageTextField.getText().equals(""))
        {
            mwage = Double  .parseDouble  (mwageTextField.getText());
        }
        if(!fnoTextField.getText().equals(""))
        {
            fno = Double  .parseDouble  (fnoTextField.getText());
            fwageTextField.setEnabled(true);
        }
        if(!fwageTextField.getText().equals(""))
        {
            fwage = Double  .parseDouble  (fwageTextField.getText());
        }
        if(!extra_expenseTextField1.getText().equals(""))
        {
            extra1 = Double  .parseDouble  (extra_expenseTextField1.getText());
        }
        total = (mno*mwage)+(fno*fwage)+extra1;
        label_total1.setText(Double  .toString(total));
    }
    
    // TODO add your handling code here:
}//GEN-LAST:event_fnoTextFieldKeyReleased

private void fwageTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fwageTextFieldKeyReleased

    if(Functions.NumericValidate(fwageTextField))
    {
        if(mnoTextField.getText().equals(""))
        {
            mno=0;
        }
        if(mwageTextField.getText().equals(""))
        {
            mwage=0;
        }
        if(fnoTextField.getText().equals(""))
        {
            fno=0;
        }
        if(fwageTextField.getText().equals(""))
        {
            fwage=0;
        }
        if(extra_expenseTextField1.getText().equals(""))
        {
            extra1=0;
        }
        if(!mnoTextField.getText().equals(""))
        {
            mno = Double  .parseDouble  (mnoTextField.getText());
        }
        if(!mwageTextField.getText().equals(""))
        {
            mwage = Double  .parseDouble  (mwageTextField.getText());
        }
        if(!fnoTextField.getText().equals(""))
        {
            fno = Double  .parseDouble  (fnoTextField.getText());
        }
        if(!fwageTextField.getText().equals(""))
        {
            fwage = Double  .parseDouble  (fwageTextField.getText());
        }
        if(!extra_expenseTextField1.getText().equals(""))
        {
            extra1 = Double  .parseDouble  (extra_expenseTextField1.getText());
        }
        total = (mno*mwage)+(fno*fwage)+extra1;
        label_total1.setText(Double  .toString(total));
    }
    
    // TODO add your handling code here:
}//GEN-LAST:event_fwageTextFieldKeyReleased

private void extra_expenseTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_extra_expenseTextField1KeyReleased

    if(Functions.NumericValidate(extra_expenseTextField1))
    {
        if(mnoTextField.getText().equals(""))
        {
            mno=0;
        }
        if(mwageTextField.getText().equals(""))
        {
            mwage=0;
        }
        if(fnoTextField.getText().equals(""))
        {
            fno=0;
        }
        if(fwageTextField.getText().equals(""))
        {
            fwage=0;
        }
        if(extra_expenseTextField1.getText().equals(""))
        {
            extra1=0;
        }
        if(!mnoTextField.getText().equals(""))
        {
            mno = Double  .parseDouble  (mnoTextField.getText());
        }
        if(!mwageTextField.getText().equals(""))
        {
            mwage = Double  .parseDouble  (mwageTextField.getText());
        }
        if(!fnoTextField.getText().equals(""))
        {
            fno = Double  .parseDouble  (fnoTextField.getText());
        }
        if(!fwageTextField.getText().equals(""))
        {
            fwage = Double  .parseDouble  (fwageTextField.getText());
        }
        if(!extra_expenseTextField1.getText().equals(""))
        {
            extra1 = Double  .parseDouble  (extra_expenseTextField1.getText());
        }
        total = (mno*mwage)+(fno*fwage)+extra1;
        label_total1.setText(Double  .toString(total));
    }
    
    // TODO add your handling code here:
}//GEN-LAST:event_extra_expenseTextField1KeyReleased

    private void workComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_workComboItemStateChanged

        if(workCombo.getSelectedItem().equals("Carpentary"))
        {
            type_of_woodLabel.setEnabled(true);
            type_of_woodTextField.setEnabled(true);
            quantity_usedLabel.setEnabled(true);
            quantity_usedTextField.setEnabled(true);
        }
        else
        {
            type_of_woodLabel.setEnabled(false);
            type_of_woodTextField.setEnabled(false);
            quantity_usedLabel.setEnabled(false);
            quantity_usedTextField.setEnabled(false);
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_workComboItemStateChanged

    private void type_of_woodTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_type_of_woodTextFieldFocusGained

        type_of_woodLabel.setForeground(Color.black);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_type_of_woodTextFieldFocusGained

    private void type_of_woodTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_type_of_woodTextFieldFocusLost

        if(type_of_woodTextField.getText().equals(""))
        {
            type_of_woodLabel.setForeground(Color.red);
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_type_of_woodTextFieldFocusLost

    private void quantity_usedTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_quantity_usedTextFieldFocusGained
        
        quantity_usedLabel.setForeground(Color.black);
        if(type_of_woodTextField.getText().equals(""))
        {
            type_of_woodLabel.setForeground(Color.red);
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_quantity_usedTextFieldFocusGained

    private void quantity_usedTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_quantity_usedTextFieldFocusLost

        if(quantity_usedTextField.getText().equals(""))
        {
            quantity_usedLabel.setForeground(Color.red);
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_quantity_usedTextFieldFocusLost

    private void nameCombo3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_nameCombo3ItemStateChanged

        if(nameCombo3.getSelectedItem().equals("Select"))
        {
            wageTextField3.setText("");
            wageTextField3.setEnabled(false);
            
            if(!extra_expenseTextField.getText().equals(""))
            {
                extra = Double  .parseDouble  (extra_expenseTextField.getText());
            } else extra = (Double) 0.0;
            if(!wageTextField.getText().equals(""))
            {
                wage = Double  .parseDouble  (wageTextField.getText());
            } else wage = (Double) 0.0;
            if(!wageTextField1.getText().equals(""))
            {
                wage1 = Double  .parseDouble  (wageTextField1.getText());
            } else wage1 = (Double) 0.0;
            if(!wageTextField2.getText().equals(""))
            {
                wage2 = Double  .parseDouble  (wageTextField2.getText());
            } else wage2 = (Double) 0.0;
        
            total = wage + wage1 + wage2 + extra;
            label_total.setText(Double  .toString(total));
        }
        else
        {
            wageTextField3.setEnabled(true);
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_nameCombo3ItemStateChanged

    private void nameCombo1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nameCombo1MouseEntered
        
        if(!wageTextField.getText().equals(""))
        {
            nameCombo1.setEnabled(true);
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_nameCombo1MouseEntered

    private void nameCombo2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nameCombo2MouseEntered

        if(!wageTextField1.getText().equals(""))
        {
            nameCombo2.setEnabled(true);
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_nameCombo2MouseEntered

    private void nameCombo3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nameCombo3MouseEntered

        if(!wageTextField2.getText().equals(""))
        {
            nameCombo3.setEnabled(true);
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_nameCombo3MouseEntered

    private void wageTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_wageTextFieldFocusLost

        if(wageTextField.getText().equals(""))
        {
            nameCombo.setSelectedItem("Select");
            wageTextField.setEnabled(false);
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_wageTextFieldFocusLost

    private void wageTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_wageTextField1FocusLost

        if(wageTextField1.getText().equals(""))
        {
            nameCombo1.setSelectedItem("Select");
            nameCombo1.setEnabled(false);
            wageTextField1.setEnabled(false);
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_wageTextField1FocusLost

    private void wageTextField2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_wageTextField2FocusLost

        if(wageTextField2.getText().equals(""))
        {
            nameCombo2.setSelectedItem("Select");
            nameCombo2.setEnabled(false);
            wageTextField2.setEnabled(false);
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_wageTextField2FocusLost

    private void wageTextField3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_wageTextField3FocusLost

        if(wageTextField3.getText().equals(""))
        {
            nameCombo3.setSelectedItem("Select");
            nameCombo3.setEnabled(false);
            wageTextField3.setEnabled(false);
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_wageTextField3FocusLost

    private void mnoTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mnoTextFieldFocusGained

        mnoLabel.setForeground(Color.black);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_mnoTextFieldFocusGained

    private void mwageTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mwageTextFieldFocusGained

        mwageLabel.setForeground(Color.black);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_mwageTextFieldFocusGained

    private void fnoTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fnoTextFieldFocusGained

        fnoLabel.setForeground(Color.black);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_fnoTextFieldFocusGained

    private void fwageTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fwageTextFieldFocusGained

        fwageLabel.setForeground(Color.black);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_fwageTextFieldFocusGained

    private void mnoTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mnoTextFieldFocusLost

        if(mnoTextField.getText().equals("") && !mwageTextField.getText().equals(""))
        {
            mnoLabel.setForeground(Color.red);
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_mnoTextFieldFocusLost

    private void mwageTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mwageTextFieldFocusLost
       
        if(!mnoTextField.getText().equals("") && mwageTextField.getText().equals(""))
        {
            mwageLabel.setForeground(Color.red);
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_mwageTextFieldFocusLost

    private void fnoTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fnoTextFieldFocusLost

        if(fnoTextField.getText().equals("") && !fwageTextField.getText().equals(""))
        {
            fnoLabel.setForeground(Color.red);
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_fnoTextFieldFocusLost

    private void fwageTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fwageTextFieldFocusLost

        if(!fnoTextField.getText().equals("") && fwageTextField.getText().equals(""))
        {
            fwageLabel.setForeground(Color.red);
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_fwageTextFieldFocusLost

    private void wageTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wageTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_wageTextField2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OurLabourDailyUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OurLabourDailyUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OurLabourDailyUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OurLabourDailyUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new OurLabourDailyUpdate().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JLabel dateLabel;
    private org.jdesktop.swingx.JXDatePicker datePicker;
    private javax.swing.JLabel detailsLabel;
    private javax.swing.JLabel detailsLabel1;
    private javax.swing.JTextArea detailsTextArea;
    private javax.swing.JTextArea detailsTextArea1;
    private javax.swing.JLabel extra_expenseLabel;
    private javax.swing.JLabel extra_expenseLabel1;
    private javax.swing.JTextField extra_expenseTextField;
    private javax.swing.JTextField extra_expenseTextField1;
    private javax.swing.JLabel femaleLabel;
    private javax.swing.JLabel fnoLabel;
    private javax.swing.JTextField fnoTextField;
    private javax.swing.JLabel fwageLabel;
    private javax.swing.JTextField fwageTextField;
    private javax.swing.JLabel group_labour_chargesLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel label_total;
    private javax.swing.JLabel label_total1;
    private javax.swing.JLabel labour_daily_chargesLabel;
    private javax.swing.JLabel maleLabel;
    private javax.swing.JLabel mnoLabel;
    private javax.swing.JTextField mnoTextField;
    private javax.swing.JLabel mwageLabel;
    private javax.swing.JTextField mwageTextField;
    private javax.swing.JComboBox nameCombo;
    private javax.swing.JComboBox nameCombo1;
    private javax.swing.JComboBox nameCombo2;
    private javax.swing.JComboBox nameCombo3;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JComboBox project_nameCombo;
    private javax.swing.JLabel project_nameLabel;
    private javax.swing.JLabel quantity_usedLabel;
    private javax.swing.JTextField quantity_usedTextField;
    private javax.swing.JLabel single_labour_chargesLabel;
    private javax.swing.JLabel totalLabel;
    private javax.swing.JLabel totalLabel1;
    private javax.swing.JLabel type_of_woodLabel;
    private javax.swing.JTextField type_of_woodTextField;
    private javax.swing.JLabel wageLabel;
    private javax.swing.JTextField wageTextField;
    private javax.swing.JTextField wageTextField1;
    private javax.swing.JTextField wageTextField2;
    private javax.swing.JTextField wageTextField3;
    private javax.swing.JComboBox workCombo;
    private javax.swing.JLabel workLabel;
    // End of variables declaration//GEN-END:variables
}
