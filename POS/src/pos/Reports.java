/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package pos;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.text.SimpleDateFormat;
import java.util.Enumeration;
import javax.swing.AbstractButton;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author lenovo
 */
public class Reports extends javax.swing.JFrame {

    /**
     * Creates new form Reports
     */
    public Reports() {
        initComponents();
        setLocation(238,0);
//        setLocationRelativeTo(null);
        setSize(760,560);
        setTitle("Reports");
        getContentPane().setBackground(new Color(129,134,138));
        setVisible(true);
        
        Functions.FillCombo(projectCombo,"PRONAME","Project");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        reportsLabel = new javax.swing.JLabel();
        project_nameLabel = new javax.swing.JLabel();
        projectCombo = new javax.swing.JComboBox();
        reportPanel = new javax.swing.JPanel();
        report_typeLabel = new javax.swing.JLabel();
        prButton = new javax.swing.JButton();
        mrButton = new javax.swing.JButton();
        vrButton = new javax.swing.JButton();
        irButton = new javax.swing.JButton();
        crButton = new javax.swing.JButton();
        wrButton = new javax.swing.JButton();
        lrButton1 = new javax.swing.JButton();
        lrButton2 = new javax.swing.JButton();
        irButton1 = new javax.swing.JButton();
        irButton2 = new javax.swing.JButton();
        irButton3 = new javax.swing.JButton();
        irButton4 = new javax.swing.JButton();
        lrButton3 = new javax.swing.JButton();
        lrButton4 = new javax.swing.JButton();
        lrButton5 = new javax.swing.JButton();
        lrButton = new javax.swing.JButton();
        fromDate = new org.jdesktop.swingx.JXDatePicker();
        fromLabel = new javax.swing.JLabel();
        toLabel = new javax.swing.JLabel();
        toDate = new org.jdesktop.swingx.JXDatePicker();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        reportsLabel.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        reportsLabel.setForeground(new java.awt.Color(0, 102, 102));
        reportsLabel.setText("Reports");

        project_nameLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        project_nameLabel.setText("Project Name");

        projectCombo.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        projectCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All" }));
        projectCombo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                projectComboFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                projectComboFocusLost(evt);
            }
        });

        reportPanel.setBackground(new java.awt.Color(129, 134, 138));
        reportPanel.setEnabled(false);

        report_typeLabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        report_typeLabel.setForeground(new java.awt.Color(0, 102, 102));
        report_typeLabel.setText("Report Type");

        prButton.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        prButton.setText("Project Cost");
        prButton.setBorder(null);
        prButton.setBorderPainted(false);
        prButton.setContentAreaFilled(false);
        prButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        prButton.setFocusPainted(false);
        prButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                prButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                prButtonMouseExited(evt);
            }
        });
        prButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prButtonActionPerformed(evt);
            }
        });

        mrButton.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        mrButton.setText("Payment");
        mrButton.setBorder(null);
        mrButton.setBorderPainted(false);
        mrButton.setContentAreaFilled(false);
        mrButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mrButton.setFocusPainted(false);
        mrButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mrButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                mrButtonMouseExited(evt);
            }
        });
        mrButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mrButtonActionPerformed(evt);
            }
        });

        vrButton.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        vrButton.setText("Project Quote");
        vrButton.setBorder(null);
        vrButton.setBorderPainted(false);
        vrButton.setContentAreaFilled(false);
        vrButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        vrButton.setFocusPainted(false);
        vrButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vrButtonActionPerformed(evt);
            }
        });

        irButton.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        irButton.setText("Wood-Stock");
        irButton.setBorder(null);
        irButton.setBorderPainted(false);
        irButton.setContentAreaFilled(false);
        irButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        irButton.setFocusPainted(false);
        irButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                irButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                irButtonMouseExited(evt);
            }
        });
        irButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                irButtonActionPerformed(evt);
            }
        });

        crButton.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        crButton.setText("Carrier ");
        crButton.setBorder(null);
        crButton.setBorderPainted(false);
        crButton.setContentAreaFilled(false);
        crButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        crButton.setFocusPainted(false);
        crButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crButtonActionPerformed(evt);
            }
        });

        wrButton.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        wrButton.setText("Receipt");
        wrButton.setBorder(null);
        wrButton.setBorderPainted(false);
        wrButton.setContentAreaFilled(false);
        wrButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        wrButton.setFocusPainted(false);
        wrButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                wrButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                wrButtonMouseExited(evt);
            }
        });
        wrButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wrButtonActionPerformed(evt);
            }
        });

        lrButton1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        lrButton1.setText("Customer-name list");
        lrButton1.setBorder(null);
        lrButton1.setBorderPainted(false);
        lrButton1.setContentAreaFilled(false);
        lrButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lrButton1.setFocusPainted(false);
        lrButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lrButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lrButton1MouseExited(evt);
            }
        });
        lrButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lrButton1ActionPerformed(evt);
            }
        });

        lrButton2.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        lrButton2.setText("Contractor-name list");
        lrButton2.setBorder(null);
        lrButton2.setBorderPainted(false);
        lrButton2.setContentAreaFilled(false);
        lrButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lrButton2.setFocusPainted(false);
        lrButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lrButton2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lrButton2MouseExited(evt);
            }
        });
        lrButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lrButton2ActionPerformed(evt);
            }
        });

        irButton1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        irButton1.setText("Vendor");
        irButton1.setBorder(null);
        irButton1.setBorderPainted(false);
        irButton1.setContentAreaFilled(false);
        irButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        irButton1.setFocusPainted(false);
        irButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                irButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                irButton1MouseExited(evt);
            }
        });
        irButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                irButton1ActionPerformed(evt);
            }
        });

        irButton2.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        irButton2.setText("Wood-Usage");
        irButton2.setBorder(null);
        irButton2.setBorderPainted(false);
        irButton2.setContentAreaFilled(false);
        irButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        irButton2.setFocusPainted(false);
        irButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                irButton2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                irButton2MouseExited(evt);
            }
        });
        irButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                irButton2ActionPerformed(evt);
            }
        });

        irButton3.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        irButton3.setText("Furniture");
        irButton3.setBorder(null);
        irButton3.setBorderPainted(false);
        irButton3.setContentAreaFilled(false);
        irButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        irButton3.setFocusPainted(false);
        irButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                irButton3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                irButton3MouseExited(evt);
            }
        });
        irButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                irButton3ActionPerformed(evt);
            }
        });

        irButton4.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        irButton4.setText("Inventory");
        irButton4.setBorder(null);
        irButton4.setBorderPainted(false);
        irButton4.setContentAreaFilled(false);
        irButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        irButton4.setFocusPainted(false);
        irButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                irButton4ActionPerformed(evt);
            }
        });

        lrButton3.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        lrButton3.setText("Our Labour-Work");
        lrButton3.setBorder(null);
        lrButton3.setBorderPainted(false);
        lrButton3.setContentAreaFilled(false);
        lrButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lrButton3.setFocusPainted(false);
        lrButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lrButton3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lrButton3MouseExited(evt);
            }
        });
        lrButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lrButton3ActionPerformed(evt);
            }
        });

        lrButton4.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        lrButton4.setText("Contractor-Work");
        lrButton4.setBorder(null);
        lrButton4.setBorderPainted(false);
        lrButton4.setContentAreaFilled(false);
        lrButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lrButton4.setFocusPainted(false);
        lrButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lrButton4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lrButton4MouseExited(evt);
            }
        });
        lrButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lrButton4ActionPerformed(evt);
            }
        });

        lrButton5.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        lrButton5.setText("Labour-Work");
        lrButton5.setBorder(null);
        lrButton5.setBorderPainted(false);
        lrButton5.setContentAreaFilled(false);
        lrButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lrButton5.setFocusPainted(false);
        lrButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lrButton5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lrButton5MouseExited(evt);
            }
        });
        lrButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lrButton5ActionPerformed(evt);
            }
        });

        lrButton.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        lrButton.setText("Vendor-name list");
        lrButton.setBorder(null);
        lrButton.setBorderPainted(false);
        lrButton.setContentAreaFilled(false);
        lrButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lrButton.setFocusPainted(false);
        lrButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lrButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lrButtonMouseExited(evt);
            }
        });
        lrButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lrButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout reportPanelLayout = new javax.swing.GroupLayout(reportPanel);
        reportPanel.setLayout(reportPanelLayout);
        reportPanelLayout.setHorizontalGroup(
            reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reportPanelLayout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(reportPanelLayout.createSequentialGroup()
                        .addGap(185, 185, 185)
                        .addComponent(report_typeLabel))
                    .addGroup(reportPanelLayout.createSequentialGroup()
                        .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(reportPanelLayout.createSequentialGroup()
                                .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(prButton)
                                    .addComponent(vrButton)
                                    .addComponent(crButton))
                                .addGap(67, 67, 67)
                                .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(irButton)
                                    .addComponent(irButton1)
                                    .addComponent(irButton4)))
                            .addGroup(reportPanelLayout.createSequentialGroup()
                                .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(wrButton)
                                    .addComponent(mrButton))
                                .addGap(117, 117, 117)
                                .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(irButton3)
                                    .addComponent(irButton2))))
                        .addGap(51, 51, 51)
                        .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lrButton)
                            .addComponent(lrButton2)
                            .addComponent(lrButton1)
                            .addComponent(lrButton3)
                            .addComponent(lrButton4)
                            .addComponent(lrButton5))))
                .addContainerGap(128, Short.MAX_VALUE))
        );
        reportPanelLayout.setVerticalGroup(
            reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reportPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(report_typeLabel)
                .addGap(18, 18, 18)
                .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prButton)
                    .addComponent(irButton4)
                    .addComponent(lrButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vrButton)
                    .addComponent(irButton1)
                    .addComponent(lrButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(crButton)
                    .addComponent(irButton)
                    .addComponent(lrButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wrButton)
                    .addComponent(irButton2)
                    .addComponent(lrButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(irButton3)
                    .addComponent(mrButton)
                    .addComponent(lrButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lrButton)
                .addContainerGap(67, Short.MAX_VALUE))
        );

        fromDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fromDateFocusGained(evt);
            }
        });

        fromLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        fromLabel.setText("From");

        toLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        toLabel.setText("To");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addComponent(reportPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(205, 205, 205)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(fromLabel)
                                .addGap(31, 31, 31)
                                .addComponent(fromDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(toLabel)
                                .addGap(18, 18, 18)
                                .addComponent(toDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(project_nameLabel)
                                .addGap(41, 41, 41)
                                .addComponent(projectCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(310, 310, 310)
                        .addComponent(reportsLabel)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(reportsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(project_nameLabel)
                    .addComponent(projectCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fromDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fromLabel)
                    .addComponent(toLabel)
                    .addComponent(toDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(reportPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mrButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mrButtonMouseEntered

        mrButton.setForeground(Color.white);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_mrButtonMouseEntered

    private void mrButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mrButtonMouseExited

        mrButton.setForeground(Color.black);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_mrButtonMouseExited

    private void irButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_irButtonMouseEntered
        
        irButton.setForeground(Color.white);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_irButtonMouseEntered

    private void irButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_irButtonMouseExited
        
        irButton.setForeground(Color.black);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_irButtonMouseExited

    private void wrButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_wrButtonMouseEntered
        
        wrButton.setForeground(Color.white);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_wrButtonMouseEntered

    private void wrButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_wrButtonMouseExited
        
        wrButton.setForeground(Color.black);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_wrButtonMouseExited

    private void lrButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lrButtonMouseEntered
        
        lrButton.setForeground(Color.white);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_lrButtonMouseEntered

    private void lrButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lrButtonMouseExited
        
        lrButton.setForeground(Color.black);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_lrButtonMouseExited

    private void prButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prButtonActionPerformed
        int flag=0;
        String fromdate,todate;
        String pname = (String) projectCombo.getSelectedItem();
        
       if((fromDate.getEditor().getText().equals(""))&&(!toDate.getEditor().getText().equals("")))
       {
           fromLabel.setForeground(Color.red);
           toLabel.setForeground(Color.black);
           flag++;
       
       }
        if((!fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
       {
           toLabel.setForeground(Color.red);
           fromLabel.setForeground(Color.black);
           flag++;
       
       }
        if((fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
        {
           fromdate = "01/01/2000";
           todate   = "01/01/2050";
        }
        else
        {
             SimpleDateFormat formater = new SimpleDateFormat("MM/dd/yyyy");
                              fromdate = formater.format(fromDate.getDate());
                                todate = formater.format(toDate.getDate());
        }     
        
        
        if(flag==0)
        {
        if(projectCombo.getSelectedItem().equals("All"))
        {
          try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("G:\\hyderproject\\reports\\Projectcost.jrxml");
            String sql = "select INVDATE,  'Inventory' as Category ,MATERIAL,INVTOTALCOST from Inventory  where  INVDATE between #"+fromdate+"# and #"+todate+"#  UNION all select  TRAN_DATE,'Transport' as Category , TRAN_GOODS,TOTAL  from Transport where  TRAN_DATE between #"+fromdate+"# and #"+todate+"# UNION all select  LDATE, 'Our labours ' as Category ,WORK,TOTAL from Labourdailymain where LDATE between #"+fromdate+"# and #"+todate+"# UNION all select  wdate , 'Contarct work' as Category,work ,total from LabourdailyOther where  wdate between #"+fromdate+"# and #"+todate+"# order by Category ;";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        }
        
        else
        {
            try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("G:\\hyderproject\\reports\\Projectcost.jrxml");
            String sql = "select INVDATE ,  'Inventory' as Category ,MATERIAL,INVTOTALCOST from Inventory  where PRONAME ='"+pname+"' and INVDATE between #"+fromdate+"# and #"+todate+"#  UNION all select  TRAN_DATE,'Transport' as Category , TRAN_GOODS,TOTAL  from Transport where  TRAN_PRO ='"+pname+"' and TRAN_DATE between #"+fromdate+"# and #"+todate+"# UNION all select  LDATE, 'Our labours ' as Category ,WORK,TOTAL from Labourdailymain where  PNAME ='"+pname+"' and LDATE between #"+fromdate+"# and #"+todate+"# UNION all select  wdate , 'Contarct work' as Category,work ,total from LabourdailyOther where pname ='"+pname+"' and wdate between #"+fromdate+"# and #"+todate+"# order by Category ;";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
      //  JOptionPane.showMessageDialog(null, "NOT AT ALL");
        }
            
        }
            
       
    }//GEN-LAST:event_prButtonActionPerformed

    private void projectComboFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_projectComboFocusGained

        project_nameLabel.setForeground(Color.black);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_projectComboFocusGained

    private void fromDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fromDateFocusGained

        fromLabel.setForeground(Color.black);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_fromDateFocusGained

    private void projectComboFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_projectComboFocusLost

        if(projectCombo.getSelectedItem().equals("Select"))
        {
            project_nameLabel.setForeground(Color.red);
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_projectComboFocusLost

    private void vrButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vrButtonActionPerformed
        int flag=0;
        String fromdate,todate;
        String pname = (String) projectCombo.getSelectedItem();
        
       if((fromDate.getEditor().getText().equals(""))&&(!toDate.getEditor().getText().equals("")))
       {
           fromLabel.setForeground(Color.red);
           toLabel.setForeground(Color.black);
           flag++;
       
       }
        if((!fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
       {
           toLabel.setForeground(Color.red);
           fromLabel.setForeground(Color.black);
           flag++;
       
       }
        if((fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
        {
           fromdate = "01/01/2000";
           todate   = "01/01/2050";
        }
        else
        {
             SimpleDateFormat formater = new SimpleDateFormat("MM/dd/yyyy");
                              fromdate = formater.format(fromDate.getDate());
                                todate = formater.format(toDate.getDate());
        }     
        
        
        if(flag==0)
        {
        if(projectCombo.getSelectedItem().equals("All"))
        {
          try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("G:\\hyderproject\\reports\\Projectprice.jrxml");
            String sql = "Select wdate,category,work,total from workquote  where  wdate between #"+fromdate+"# and #"+todate+"# union all select INVDATE,MATERIAL,'Inventory' ,INVTOTALPRICE from Inventory  where INVDATE between #"+fromdate+"# and #"+todate+"#; ";     
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        }
        
        else
        {
            try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("G:\\hyderproject\\reports\\Projectprice.jrxml");
            String sql = "Select wdate,category,work,total from workquote where pname ='"+pname+"' and wdate between #"+fromdate+"# and #"+todate+"# union all select INVDATE,MATERIAL,'Inventory' as work ,INVTOTALPRICE from Inventory  where PRONAME ='"+pname+"' and INVDATE between #"+fromdate+"# and #"+todate+"#;";
           JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
      //  JOptionPane.showMessageDialog(null, "NOT AT ALL");
        }
        }
    }//GEN-LAST:event_vrButtonActionPerformed

    private void wrButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wrButtonActionPerformed

        if(projectCombo.getSelectedItem().equals("Select"))
        {
            project_nameLabel.setForeground(Color.red);
        }
        
        else
        {
            // DATABASE CODE HERE
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_wrButtonActionPerformed

    private void crButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crButtonActionPerformed

       
        
        int flag=0;
        String fromdate,todate;
        String pname = (String) projectCombo.getSelectedItem();
        
       if((fromDate.getEditor().getText().equals(""))&&(!toDate.getEditor().getText().equals("")))
       {
           fromLabel.setForeground(Color.red);
           toLabel.setForeground(Color.black);
           flag++;
       
       }
        if((!fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
       {
           toLabel.setForeground(Color.red);
           fromLabel.setForeground(Color.black);
           flag++;
       
       }
        if((fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
        {
           fromdate = "01/01/2000";
           todate   = "01/01/2050";
        }
        else
        {
             SimpleDateFormat formater = new SimpleDateFormat("MM/dd/yyyy");
                              fromdate = formater.format(fromDate.getDate());
                                todate = formater.format(toDate.getDate());
        }     
        
        
        if(flag==0)
        {
        if(projectCombo.getSelectedItem().equals("All"))
        {
          try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("G:\\hyderproject\\reports\\transport.jrxml");
            String sql = "select * from Transport where   TRAN_DATE between #"+fromdate+"# and #"+todate+"# ;";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        }
        
        else
        {
            try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("G:\\hyderproject\\reports\\transport.jrxml");
            String sql = "select * from Transport where  TRAN_PRO ='"+pname+"' and  TRAN_DATE between #"+fromdate+"# and #"+todate+"#;";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
      //  JOptionPane.showMessageDialog(null, "NOT AT ALL");
        }
            
        }
            
    }//GEN-LAST:event_crButtonActionPerformed

    private void mrButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mrButtonActionPerformed
        
         int flag=0;
        String fromdate,todate;
        String pname = (String) projectCombo.getSelectedItem();
        
       if((fromDate.getEditor().getText().equals(""))&&(!toDate.getEditor().getText().equals("")))
       {
           fromLabel.setForeground(Color.red);
           toLabel.setForeground(Color.black);
           flag++;
       
       }
        if((!fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
       {
           toLabel.setForeground(Color.red);
           fromLabel.setForeground(Color.black);
           flag++;
       
       }
        if((fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
        {
           fromdate = "01/01/2000";
           todate   = "01/01/2050";
        }
        else
        {
             SimpleDateFormat formater = new SimpleDateFormat("MM/dd/yyyy");
                              fromdate = formater.format(fromDate.getDate());
                                todate = formater.format(toDate.getDate());
        }     
        
        
        if(flag==0)
        {
         try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("G:\\hyderproject\\reports\\payment.jrxml");
            String sql = "select * from payment where  pdate between #"+fromdate+"# and #"+todate+"#; ";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        }   
        
    }//GEN-LAST:event_mrButtonActionPerformed

    private void irButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_irButtonActionPerformed

         int flag=0;
        String fromdate,todate;
        String pname = (String) projectCombo.getSelectedItem();
        
       if((fromDate.getEditor().getText().equals(""))&&(!toDate.getEditor().getText().equals("")))
       {
           fromLabel.setForeground(Color.red);
           toLabel.setForeground(Color.black);
           flag++;
       
       }
        if((!fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
       {
           toLabel.setForeground(Color.red);
           fromLabel.setForeground(Color.black);
           flag++;
       
       }
        if((fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
        {
           fromdate = "01/01/2000";
           todate   = "01/01/2050";
        }
        else
        {
             SimpleDateFormat formater = new SimpleDateFormat("MM/dd/yyyy");
                              fromdate = formater.format(fromDate.getDate());
                                todate = formater.format(toDate.getDate());
        }     
        
        
        if(flag==0)
        {
         try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("G:\\hyderproject\\reports\\woodinventory.jrxml");
            String sql = "select * from Wood where  BILLDATE between #"+fromdate+"# and #"+todate+"#; ";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        }   
    }//GEN-LAST:event_irButtonActionPerformed

    private void lrButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lrButtonActionPerformed
        try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("G:\\hyderproject\\reports\\vendor-list.jrxml");
            String sql = "select * from vendor;";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_lrButtonActionPerformed

    private void lrButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lrButton1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_lrButton1MouseEntered

    private void lrButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lrButton1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_lrButton1MouseExited

    private void lrButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lrButton1ActionPerformed
         try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("G:\\hyderproject\\reports\\customer-list.jrxml");
            String sql = "select * from Customer;";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }   
    }//GEN-LAST:event_lrButton1ActionPerformed

    private void lrButton2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lrButton2MouseEntered
        lrButton2.setForeground(Color.white);        // TODO add your handling code here:
    }//GEN-LAST:event_lrButton2MouseEntered

    private void lrButton2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lrButton2MouseExited
        lrButton2.setForeground(Color.black);   // TODO add your handling code here:
    }//GEN-LAST:event_lrButton2MouseExited

    private void lrButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lrButton2ActionPerformed
     try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("G:\\hyderproject\\reports\\contractor-list.jrxml");
            String sql = "select * from contractor;";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_lrButton2ActionPerformed

    private void irButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_irButton1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_irButton1MouseEntered

    private void irButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_irButton1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_irButton1MouseExited

    private void irButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_irButton1ActionPerformed
         int flag=0;
        String fromdate,todate;
        String pname = (String) projectCombo.getSelectedItem();
        
       if((fromDate.getEditor().getText().equals(""))&&(!toDate.getEditor().getText().equals("")))
       {
           fromLabel.setForeground(Color.red);
           toLabel.setForeground(Color.black);
           flag++;
       
       }
        if((!fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
       {
           toLabel.setForeground(Color.red);
           fromLabel.setForeground(Color.black);
           flag++;
       
       }
        if((fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
        {
           fromdate = "01/01/2000";
           todate   = "01/01/2050";
        }
        else
        {
             SimpleDateFormat formater = new SimpleDateFormat("MM/dd/yyyy");
                              fromdate = formater.format(fromDate.getDate());
                                todate = formater.format(toDate.getDate());
        }     
        
        
        if(flag==0)
        {
        
          try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("G:\\hyderproject\\reports\\vendor.jrxml");
            String sql = "select VENDOR,WOODTYPE,BILLDATE,TOTAL from Wood where BILLDATE between #"+fromdate+"# and #"+todate+"# union all select VENNAME,MATERIAL,BILLDATE,INVTOTALCOST from Inventory where BILLDATE between #"+fromdate+"# and #"+todate+"#";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } }
            
        
        // TODO add your handling code here:
    }//GEN-LAST:event_irButton1ActionPerformed

    private void irButton2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_irButton2MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_irButton2MouseEntered

    private void irButton2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_irButton2MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_irButton2MouseExited

    private void irButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_irButton2ActionPerformed
         int flag=0;
        String fromdate,todate;
        String pname = (String) projectCombo.getSelectedItem();
        
       if((fromDate.getEditor().getText().equals(""))&&(!toDate.getEditor().getText().equals("")))
       {
           fromLabel.setForeground(Color.red);
           toLabel.setForeground(Color.black);
           flag++;
       
       }
        if((!fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
       {
           toLabel.setForeground(Color.red);
           fromLabel.setForeground(Color.black);
           flag++;
       
       }
        if((fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
        {
           fromdate = "01/01/2000";
           todate   = "01/01/2050";
        }
        else
        {
             SimpleDateFormat formater = new SimpleDateFormat("MM/dd/yyyy");
                              fromdate = formater.format(fromDate.getDate());
                                todate = formater.format(toDate.getDate());
        }     
        
        
        if(flag==0)
        {
        if(projectCombo.getSelectedItem().equals("All"))
        {
          try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("G:\\hyderproject\\reports\\Woodusage.jrxml");
            String sql = "Select PNAME, WOODTYPE,WOOD_QUAN,WOOD_BATCH,WOOD_COST from Labourdailymain where WORK='Carpentary' and WOODTYPE is  NOT NULL and  LDATE between #"+fromdate+"# and #"+todate+"#";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        }
        
        else
        {
            try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("G:\\hyderproject\\reports\\Woodusage.jrxml");
            String sql = "Select PNAME, WOODTYPE,WOOD_QUAN,WOOD_BATCH,WOOD_COST from Labourdailymain where WORK='Carpentary' and WOODTYPE is  NOT NULL and PNAME ='"+pname+"' and  LDATE between #"+fromdate+"# and #"+todate+"#";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
      //  JOptionPane.showMessageDialog(null, "NOT AT ALL");
        }
            
        }
            
    }//GEN-LAST:event_irButton2ActionPerformed

    private void irButton3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_irButton3MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_irButton3MouseEntered

    private void irButton3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_irButton3MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_irButton3MouseExited

    private void irButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_irButton3ActionPerformed
 int flag=0;
        String fromdate,todate;
        String pname = (String) projectCombo.getSelectedItem();
        
       if((fromDate.getEditor().getText().equals(""))&&(!toDate.getEditor().getText().equals("")))
       {
           fromLabel.setForeground(Color.red);
           toLabel.setForeground(Color.black);
           flag++;
       
       }
        if((!fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
       {
           toLabel.setForeground(Color.red);
           fromLabel.setForeground(Color.black);
           flag++;
       
       }
        if((fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
        {
           fromdate = "01/01/2000";
           todate   = "01/01/2050";
        }
        else
        {
             SimpleDateFormat formater = new SimpleDateFormat("MM/dd/yyyy");
                              fromdate = formater.format(fromDate.getDate());
                                todate = formater.format(toDate.getDate());
        }     
        
        
        if(flag==0)
        {
        if(projectCombo.getSelectedItem().equals("All"))
        {
          try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("G:\\hyderproject\\reports\\furniture.jrxml");
            String sql = "select pname,wdate,fname,fno,frate,total from workquote where category ='Furniture'  and  wdate between #"+fromdate+"# and #"+todate+"#";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        }
        
        else
        {
            try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("G:\\hyderproject\\reports\\furniture.jrxml");
            String sql = "select pname,wdate,fname,fno,frate,total from workquote where category ='Furniture' and  pname ='"+pname+"' and  wdate between #"+fromdate+"# and #"+todate+"#";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
      //  JOptionPane.showMessageDialog(null, "NOT AT ALL");
        }
            
        }
            
        
    }//GEN-LAST:event_irButton3ActionPerformed

    private void irButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_irButton4ActionPerformed
 int flag=0;
        String fromdate,todate;
        String pname = (String) projectCombo.getSelectedItem();
        
       if((fromDate.getEditor().getText().equals(""))&&(!toDate.getEditor().getText().equals("")))
       {
           fromLabel.setForeground(Color.red);
           toLabel.setForeground(Color.black);
           flag++;
       
       }
        if((!fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
       {
           toLabel.setForeground(Color.red);
           fromLabel.setForeground(Color.black);
           flag++;
       
       }
        if((fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
        {
           fromdate = "01/01/2000";
           todate   = "01/01/2050";
        }
        else
        {
             SimpleDateFormat formater = new SimpleDateFormat("MM/dd/yyyy");
                              fromdate = formater.format(fromDate.getDate());
                                todate = formater.format(toDate.getDate());
        }     
        
        
        if(flag==0)
        {
        if(projectCombo.getSelectedItem().equals("All"))
        {
          try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("G:\\hyderproject\\reports\\inventory.jrxml");
            String sql = "Select INVID,BILLDATE,MATERIAL,QUANTITY,VENNAME,INVTOTALCOST,INVTOTALPRICE ,INVBILLNO from inventory where   INVDATE between #"+fromdate+"# and #"+todate+"#";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        }
        
        else
        {
            try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("G:\\hyderproject\\reports\\inventory.jrxml");
            String sql = "Select INVID,BILLDATE,MATERIAL,QUANTITY,VENNAME,INVTOTALCOST,INVTOTALPRICE ,INVBILLNO from inventory where  PRONAME ='"+pname+"' and  INVDATE between #"+fromdate+"# and #"+todate+"#";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
      //  JOptionPane.showMessageDialog(null, "NOT AT ALL");
        }
            
        }
                    // TODO add your handling code here:
    }//GEN-LAST:event_irButton4ActionPerformed

    private void lrButton3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lrButton3MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_lrButton3MouseEntered

    private void lrButton3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lrButton3MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_lrButton3MouseExited

    private void lrButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lrButton3ActionPerformed
        int flag=0;
        String fromdate,todate;
        String pname = (String) projectCombo.getSelectedItem();
        
       if((fromDate.getEditor().getText().equals(""))&&(!toDate.getEditor().getText().equals("")))
       {
           fromLabel.setForeground(Color.red);
           toLabel.setForeground(Color.black);
           flag++;
       
       }
        if((!fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
       {
           toLabel.setForeground(Color.red);
           fromLabel.setForeground(Color.black);
           flag++;
       
       }
        if((fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
        {
           fromdate = "01/01/2000";
           todate   = "01/01/2050";
        }
        else
        {
             SimpleDateFormat formater = new SimpleDateFormat("MM/dd/yyyy");
                              fromdate = formater.format(fromDate.getDate());
                                todate = formater.format(toDate.getDate());
        }     
        
        
        if(flag==0)
        {
        if(projectCombo.getSelectedItem().equals("All"))
        {
          try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("G:\\hyderproject\\reports\\ourlabour.jrxml");
            String sql = "select * from Labourdailymain  where    LDATE between #"+fromdate+"# and #"+todate+"#";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        }
        
        else
        {
            try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("G:\\hyderproject\\reports\\ourlabour.jrxml");
            String sql = "select * from Labourdailymain  where  PNAME ='"+pname+"' and  LDATE between #"+fromdate+"# and #"+todate+"#";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
            }
            
        }
            
    }//GEN-LAST:event_lrButton3ActionPerformed

    private void lrButton4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lrButton4MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_lrButton4MouseEntered

    private void lrButton4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lrButton4MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_lrButton4MouseExited

    private void lrButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lrButton4ActionPerformed

        
         int flag=0;
        String fromdate,todate;
        String pname = (String) projectCombo.getSelectedItem();
        
       if((fromDate.getEditor().getText().equals(""))&&(!toDate.getEditor().getText().equals("")))
       {
           fromLabel.setForeground(Color.red);
           toLabel.setForeground(Color.black);
           flag++;
       
       }
        if((!fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
       {
           toLabel.setForeground(Color.red);
           fromLabel.setForeground(Color.black);
           flag++;
       
       }
        if((fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
        {
           fromdate = "01/01/2000";
           todate   = "01/01/2050";
        }
        else
        {
             SimpleDateFormat formater = new SimpleDateFormat("MM/dd/yyyy");
                              fromdate = formater.format(fromDate.getDate());
                                todate = formater.format(toDate.getDate());
        }     
        
        
        if(flag==0)
        {
        if(projectCombo.getSelectedItem().equals("All"))
        {
          try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("G:\\hyderproject\\reports\\contract-work.jrxml");
            String sql = "select * from LabourdailyOther where   wdate between #"+fromdate+"# and #"+todate+"#;";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        }
        
        else
        {
            try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("G:\\hyderproject\\reports\\contract-work.jrxml");
            String sql = "select * from LabourdailyOther where  pname ='"+pname+"' and  wdate between #"+fromdate+"# and #"+todate+"#;";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
      }
            
        }
            
    }//GEN-LAST:event_lrButton4ActionPerformed

    private void lrButton5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lrButton5MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_lrButton5MouseEntered

    private void lrButton5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lrButton5MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_lrButton5MouseExited

    private void lrButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lrButton5ActionPerformed
 int flag=0;
        String fromdate,todate;
        String pname = (String) projectCombo.getSelectedItem();
        
       if((fromDate.getEditor().getText().equals(""))&&(!toDate.getEditor().getText().equals("")))
       {
           fromLabel.setForeground(Color.red);
           toLabel.setForeground(Color.black);
           flag++;
       
       }
        if((!fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
       {
           toLabel.setForeground(Color.red);
           fromLabel.setForeground(Color.black);
           flag++;
       
       }
        if((fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
        {
           fromdate = "01/01/2000";
           todate   = "01/01/2050";
        }
        else
        {
             SimpleDateFormat formater = new SimpleDateFormat("MM/dd/yyyy");
                              fromdate = formater.format(fromDate.getDate());
                                todate = formater.format(toDate.getDate());
        }     
        
        
        if(flag==0)
        {
        if(projectCombo.getSelectedItem().equals("All"))
        {
          try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("G:\\hyderproject\\reports\\Labour.jrxml");
            String sql = "select * from Labourdailysub  where    LDATE between #"+fromdate+"# and #"+todate+"#";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        }
        
        else
        {
            try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("G:\\hyderproject\\reports\\Labour.jrxml");
            String sql = "select * from Labourdailysub  where  PNAME ='"+pname+"' and  LDATE between #"+fromdate+"# and #"+todate+"#";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        }
            
        }
            
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_lrButton5ActionPerformed

    private void prButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prButtonMouseEntered
        prButton.setForeground(Color.white);        // TODO add your handling code here:
    }//GEN-LAST:event_prButtonMouseEntered

    private void prButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prButtonMouseExited
         prButton.setForeground(Color.black);   // TODO add your handling code here:
    }//GEN-LAST:event_prButtonMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Reports().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton crButton;
    private org.jdesktop.swingx.JXDatePicker fromDate;
    private javax.swing.JLabel fromLabel;
    private javax.swing.JButton irButton;
    private javax.swing.JButton irButton1;
    private javax.swing.JButton irButton2;
    private javax.swing.JButton irButton3;
    private javax.swing.JButton irButton4;
    private javax.swing.JButton lrButton;
    private javax.swing.JButton lrButton1;
    private javax.swing.JButton lrButton2;
    private javax.swing.JButton lrButton3;
    private javax.swing.JButton lrButton4;
    private javax.swing.JButton lrButton5;
    private javax.swing.JButton mrButton;
    private javax.swing.JButton prButton;
    private javax.swing.JComboBox projectCombo;
    private javax.swing.JLabel project_nameLabel;
    private javax.swing.JPanel reportPanel;
    private javax.swing.JLabel report_typeLabel;
    private javax.swing.JLabel reportsLabel;
    private org.jdesktop.swingx.JXDatePicker toDate;
    private javax.swing.JLabel toLabel;
    private javax.swing.JButton vrButton;
    private javax.swing.JButton wrButton;
    // End of variables declaration//GEN-END:variables
}
