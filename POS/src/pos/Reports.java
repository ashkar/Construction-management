/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package pos;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.text.SimpleDateFormat;
import java.util.Enumeration;
import javax.swing.AbstractButton;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author lenovo
 */
public class Reports extends javax.swing.JFrame {

    /**
     * Creates new form Reports
     */
    public Reports() {
        initComponents();
        setLocation(238,0);
//        setLocationRelativeTo(null);
        setSize(600,700);
        setTitle("Reports");
        getContentPane().setBackground(new Color(129,134,138));
        setVisible(true);
        
        Functions.FillCombo(projectCombo,"PRONAME","Project");
        Functions.FillCombo(vendorCombo,"VENNAME","Vendor");
        Functions.FillCombo(materialCombo,"Material","Names");
        Functions.FillCombo(labourCombo,"LABNAME","Labour");
        Functions.FillCombo(receiptCombo,"id","Payment");
        Functions.FillCombo(paymentCombo,"cname","Payment");
        Functions.FillCombo(workCombo1,"WORK","Names");
        Functions.FillCombo(workCombo2,"WORK","Names");
       
        AutoCompleteDecorator.decorate(labourCombo);
        AutoCompleteDecorator.decorate(vendorCombo);
        AutoCompleteDecorator.decorate(receiptCombo);
        AutoCompleteDecorator.decorate(materialCombo);
        AutoCompleteDecorator.decorate(projectCombo);
        AutoCompleteDecorator.decorate(paymentCombo);
        AutoCompleteDecorator.decorate(workCombo1);
        AutoCompleteDecorator.decorate(workCombo2);
        
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        reportsLabel = new javax.swing.JLabel();
        project_nameLabel = new javax.swing.JLabel();
        projectCombo = new javax.swing.JComboBox();
        reportPanel = new javax.swing.JPanel();
        prButton = new javax.swing.JButton();
        mrButton = new javax.swing.JButton();
        vrButton = new javax.swing.JButton();
        irButton = new javax.swing.JButton();
        crButton = new javax.swing.JButton();
        receipt = new javax.swing.JButton();
        lrButton2 = new javax.swing.JButton();
        irButton1 = new javax.swing.JButton();
        irButton2 = new javax.swing.JButton();
        irButton3 = new javax.swing.JButton();
        irButton4 = new javax.swing.JButton();
        lrButton3 = new javax.swing.JButton();
        lrButton4 = new javax.swing.JButton();
        lrButton5 = new javax.swing.JButton();
        lrButton = new javax.swing.JButton();
        vendorCombo = new javax.swing.JComboBox();
        labourCombo = new javax.swing.JComboBox();
        materialCombo = new javax.swing.JComboBox();
        jSeparator2 = new javax.swing.JSeparator();
        receiptCombo = new javax.swing.JComboBox();
        paymentCombo = new javax.swing.JComboBox();
        workCombo2 = new javax.swing.JComboBox();
        workCombo1 = new javax.swing.JComboBox();
        lrButton1 = new javax.swing.JButton();
        lrButton6 = new javax.swing.JButton();
        lrButton7 = new javax.swing.JButton();
        lrButton8 = new javax.swing.JButton();
        lrButton9 = new javax.swing.JButton();
        lrButton10 = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        report_typeLabel1 = new javax.swing.JLabel();
        lrButton11 = new javax.swing.JButton();
        lrButton12 = new javax.swing.JButton();
        lrButton13 = new javax.swing.JButton();
        lrButton14 = new javax.swing.JButton();
        lrButton15 = new javax.swing.JButton();
        lrButton16 = new javax.swing.JButton();
        lrButton17 = new javax.swing.JButton();
        lrButton18 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        fromDate = new org.jdesktop.swingx.JXDatePicker();
        fromLabel = new javax.swing.JLabel();
        toLabel = new javax.swing.JLabel();
        toDate = new org.jdesktop.swingx.JXDatePicker();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        reportsLabel.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        reportsLabel.setForeground(new java.awt.Color(0, 102, 102));
        reportsLabel.setText("Reports");

        project_nameLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        project_nameLabel.setText("Project Name");

        projectCombo.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        projectCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All" }));
        projectCombo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                projectComboFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                projectComboFocusLost(evt);
            }
        });

        reportPanel.setBackground(new java.awt.Color(129, 134, 138));
        reportPanel.setEnabled(false);

        prButton.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        prButton.setText("Project Cost");
        prButton.setBorder(null);
        prButton.setBorderPainted(false);
        prButton.setContentAreaFilled(false);
        prButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        prButton.setFocusPainted(false);
        prButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                prButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                prButtonMouseExited(evt);
            }
        });
        prButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prButtonActionPerformed(evt);
            }
        });

        mrButton.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        mrButton.setText("Payment");
        mrButton.setBorder(null);
        mrButton.setBorderPainted(false);
        mrButton.setContentAreaFilled(false);
        mrButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mrButton.setFocusPainted(false);
        mrButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mrButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                mrButtonMouseExited(evt);
            }
        });
        mrButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mrButtonActionPerformed(evt);
            }
        });

        vrButton.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        vrButton.setText("Project Quote");
        vrButton.setBorder(null);
        vrButton.setBorderPainted(false);
        vrButton.setContentAreaFilled(false);
        vrButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        vrButton.setFocusPainted(false);
        vrButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vrButtonActionPerformed(evt);
            }
        });

        irButton.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        irButton.setText("Wood-Stock");
        irButton.setBorder(null);
        irButton.setBorderPainted(false);
        irButton.setContentAreaFilled(false);
        irButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        irButton.setFocusPainted(false);
        irButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                irButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                irButtonMouseExited(evt);
            }
        });
        irButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                irButtonActionPerformed(evt);
            }
        });

        crButton.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        crButton.setText("Carrier ");
        crButton.setBorder(null);
        crButton.setBorderPainted(false);
        crButton.setContentAreaFilled(false);
        crButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        crButton.setFocusPainted(false);
        crButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crButtonActionPerformed(evt);
            }
        });

        receipt.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        receipt.setText("Receipt");
        receipt.setBorder(null);
        receipt.setBorderPainted(false);
        receipt.setContentAreaFilled(false);
        receipt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        receipt.setFocusPainted(false);
        receipt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                receiptMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                receiptMouseExited(evt);
            }
        });
        receipt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiptActionPerformed(evt);
            }
        });

        lrButton2.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        lrButton2.setText("Contractor-name list");
        lrButton2.setBorder(null);
        lrButton2.setBorderPainted(false);
        lrButton2.setContentAreaFilled(false);
        lrButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lrButton2.setFocusPainted(false);
        lrButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lrButton2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lrButton2MouseExited(evt);
            }
        });
        lrButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lrButton2ActionPerformed(evt);
            }
        });

        irButton1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        irButton1.setText("Vendor");
        irButton1.setBorder(null);
        irButton1.setBorderPainted(false);
        irButton1.setContentAreaFilled(false);
        irButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        irButton1.setFocusPainted(false);
        irButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                irButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                irButton1MouseExited(evt);
            }
        });
        irButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                irButton1ActionPerformed(evt);
            }
        });

        irButton2.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        irButton2.setText("Wood-Usage");
        irButton2.setBorder(null);
        irButton2.setBorderPainted(false);
        irButton2.setContentAreaFilled(false);
        irButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        irButton2.setFocusPainted(false);
        irButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                irButton2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                irButton2MouseExited(evt);
            }
        });
        irButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                irButton2ActionPerformed(evt);
            }
        });

        irButton3.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        irButton3.setText("Furniture");
        irButton3.setBorder(null);
        irButton3.setBorderPainted(false);
        irButton3.setContentAreaFilled(false);
        irButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        irButton3.setFocusPainted(false);
        irButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                irButton3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                irButton3MouseExited(evt);
            }
        });
        irButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                irButton3ActionPerformed(evt);
            }
        });

        irButton4.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        irButton4.setText("Item ");
        irButton4.setBorder(null);
        irButton4.setBorderPainted(false);
        irButton4.setContentAreaFilled(false);
        irButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        irButton4.setFocusPainted(false);
        irButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                irButton4ActionPerformed(evt);
            }
        });

        lrButton3.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        lrButton3.setText("Work (own)");
        lrButton3.setBorder(null);
        lrButton3.setBorderPainted(false);
        lrButton3.setContentAreaFilled(false);
        lrButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lrButton3.setFocusPainted(false);
        lrButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lrButton3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lrButton3MouseExited(evt);
            }
        });
        lrButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lrButton3ActionPerformed(evt);
            }
        });

        lrButton4.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        lrButton4.setText("Work(contract)");
        lrButton4.setBorder(null);
        lrButton4.setBorderPainted(false);
        lrButton4.setContentAreaFilled(false);
        lrButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lrButton4.setFocusPainted(false);
        lrButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lrButton4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lrButton4MouseExited(evt);
            }
        });
        lrButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lrButton4ActionPerformed(evt);
            }
        });

        lrButton5.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        lrButton5.setText("Labour-Work");
        lrButton5.setBorder(null);
        lrButton5.setBorderPainted(false);
        lrButton5.setContentAreaFilled(false);
        lrButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lrButton5.setFocusPainted(false);
        lrButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lrButton5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lrButton5MouseExited(evt);
            }
        });
        lrButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lrButton5ActionPerformed(evt);
            }
        });

        lrButton.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        lrButton.setText("Vendor-name list");
        lrButton.setBorder(null);
        lrButton.setBorderPainted(false);
        lrButton.setContentAreaFilled(false);
        lrButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lrButton.setFocusPainted(false);
        lrButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lrButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lrButtonMouseExited(evt);
            }
        });
        lrButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lrButtonActionPerformed(evt);
            }
        });

        vendorCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All" }));

        labourCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All" }));

        materialCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All" }));

        receiptCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All" }));

        paymentCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All" }));

        workCombo2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All" }));

        workCombo1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All" }));

        lrButton1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        lrButton1.setText("Plan Details");
        lrButton1.setBorder(null);
        lrButton1.setBorderPainted(false);
        lrButton1.setContentAreaFilled(false);
        lrButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lrButton1.setFocusPainted(false);
        lrButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lrButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lrButton1MouseExited(evt);
            }
        });
        lrButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lrButton1ActionPerformed(evt);
            }
        });

        lrButton6.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        lrButton6.setText("Office Expense");
        lrButton6.setBorder(null);
        lrButton6.setBorderPainted(false);
        lrButton6.setContentAreaFilled(false);
        lrButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lrButton6.setFocusPainted(false);
        lrButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lrButton6MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lrButton6MouseExited(evt);
            }
        });
        lrButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lrButton6ActionPerformed(evt);
            }
        });

        lrButton7.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        lrButton7.setText("Payment");
        lrButton7.setBorder(null);
        lrButton7.setBorderPainted(false);
        lrButton7.setContentAreaFilled(false);
        lrButton7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lrButton7.setFocusPainted(false);
        lrButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lrButton7MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lrButton7MouseExited(evt);
            }
        });
        lrButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lrButton7ActionPerformed(evt);
            }
        });

        lrButton8.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        lrButton8.setText("Deduction");
        lrButton8.setBorder(null);
        lrButton8.setBorderPainted(false);
        lrButton8.setContentAreaFilled(false);
        lrButton8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lrButton8.setFocusPainted(false);
        lrButton8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lrButton8MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lrButton8MouseExited(evt);
            }
        });
        lrButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lrButton8ActionPerformed(evt);
            }
        });

        lrButton9.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        lrButton9.setText("Inventory");
        lrButton9.setBorder(null);
        lrButton9.setBorderPainted(false);
        lrButton9.setContentAreaFilled(false);
        lrButton9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lrButton9.setFocusPainted(false);
        lrButton9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lrButton9MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lrButton9MouseExited(evt);
            }
        });
        lrButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lrButton9ActionPerformed(evt);
            }
        });

        lrButton10.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        lrButton10.setText("Extra expense");
        lrButton10.setBorder(null);
        lrButton10.setBorderPainted(false);
        lrButton10.setContentAreaFilled(false);
        lrButton10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lrButton10.setFocusPainted(false);
        lrButton10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lrButton10MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lrButton10MouseExited(evt);
            }
        });
        lrButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lrButton10ActionPerformed(evt);
            }
        });

        report_typeLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        report_typeLabel1.setForeground(new java.awt.Color(0, 102, 102));
        report_typeLabel1.setText("DB - Copy");

        lrButton11.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        lrButton11.setText("Project Details");
        lrButton11.setBorder(null);
        lrButton11.setBorderPainted(false);
        lrButton11.setContentAreaFilled(false);
        lrButton11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lrButton11.setFocusPainted(false);
        lrButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lrButton11ActionPerformed(evt);
            }
        });

        lrButton12.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        lrButton12.setText(" Daily work update");
        lrButton12.setBorder(null);
        lrButton12.setBorderPainted(false);
        lrButton12.setContentAreaFilled(false);
        lrButton12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lrButton12.setFocusPainted(false);
        lrButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lrButton12ActionPerformed(evt);
            }
        });

        lrButton13.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        lrButton13.setText("Labour daily update");
        lrButton13.setBorder(null);
        lrButton13.setBorderPainted(false);
        lrButton13.setContentAreaFilled(false);
        lrButton13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lrButton13.setFocusPainted(false);
        lrButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lrButton13ActionPerformed(evt);
            }
        });

        lrButton14.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        lrButton14.setText("Transport");
        lrButton14.setBorder(null);
        lrButton14.setBorderPainted(false);
        lrButton14.setContentAreaFilled(false);
        lrButton14.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lrButton14.setFocusPainted(false);
        lrButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lrButton14ActionPerformed(evt);
            }
        });

        lrButton15.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        lrButton15.setText("Work Quote");
        lrButton15.setBorder(null);
        lrButton15.setBorderPainted(false);
        lrButton15.setContentAreaFilled(false);
        lrButton15.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lrButton15.setFocusPainted(false);
        lrButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lrButton15ActionPerformed(evt);
            }
        });

        lrButton16.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        lrButton16.setText("Contract -work update");
        lrButton16.setBorder(null);
        lrButton16.setBorderPainted(false);
        lrButton16.setContentAreaFilled(false);
        lrButton16.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lrButton16.setFocusPainted(false);
        lrButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lrButton16ActionPerformed(evt);
            }
        });

        lrButton17.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        lrButton17.setText("Wood inventory");
        lrButton17.setBorder(null);
        lrButton17.setBorderPainted(false);
        lrButton17.setContentAreaFilled(false);
        lrButton17.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lrButton17.setFocusPainted(false);
        lrButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lrButton17ActionPerformed(evt);
            }
        });

        lrButton18.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        lrButton18.setText("Labour namelist");
        lrButton18.setBorder(null);
        lrButton18.setBorderPainted(false);
        lrButton18.setContentAreaFilled(false);
        lrButton18.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lrButton18.setFocusPainted(false);
        lrButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lrButton18ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout reportPanelLayout = new javax.swing.GroupLayout(reportPanel);
        reportPanel.setLayout(reportPanelLayout);
        reportPanelLayout.setHorizontalGroup(
            reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addComponent(jSeparator3)
            .addGroup(reportPanelLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lrButton)
                    .addComponent(lrButton6)
                    .addComponent(lrButton1)
                    .addComponent(lrButton2)
                    .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lrButton17)
                        .addComponent(lrButton11)))
                .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(reportPanelLayout.createSequentialGroup()
                        .addComponent(report_typeLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, reportPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                        .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, reportPanelLayout.createSequentialGroup()
                                .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lrButton7)
                                    .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lrButton8)
                                        .addComponent(lrButton9))
                                    .addComponent(lrButton10))
                                .addGap(42, 42, 42))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, reportPanelLayout.createSequentialGroup()
                                .addComponent(lrButton12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))))
                .addGap(10, 10, 10)
                .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lrButton14)
                    .addComponent(lrButton13)
                    .addComponent(lrButton18)
                    .addComponent(lrButton16)
                    .addComponent(lrButton15))
                .addGap(28, 28, 28))
            .addComponent(jSeparator1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, reportPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, reportPanelLayout.createSequentialGroup()
                        .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(prButton)
                            .addComponent(irButton3))
                        .addGap(41, 41, 41)
                        .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(crButton)
                            .addComponent(vrButton))
                        .addGap(36, 36, 36)
                        .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(irButton2)
                            .addComponent(irButton))
                        .addGap(107, 107, 107))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, reportPanelLayout.createSequentialGroup()
                        .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(reportPanelLayout.createSequentialGroup()
                                .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(reportPanelLayout.createSequentialGroup()
                                        .addComponent(vendorCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(irButton1))
                                    .addGroup(reportPanelLayout.createSequentialGroup()
                                        .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(labourCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(paymentCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(mrButton)
                                            .addComponent(lrButton5))))
                                .addGap(18, 18, 18)
                                .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(reportPanelLayout.createSequentialGroup()
                                        .addComponent(materialCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(irButton4))
                                    .addGroup(reportPanelLayout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(reportPanelLayout.createSequentialGroup()
                                                .addComponent(receiptCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(receipt))
                                            .addGroup(reportPanelLayout.createSequentialGroup()
                                                .addComponent(workCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(lrButton3))))))
                            .addGroup(reportPanelLayout.createSequentialGroup()
                                .addComponent(workCombo2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lrButton4)))
                        .addGap(35, 35, 35))))
        );
        reportPanelLayout.setVerticalGroup(
            reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reportPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prButton)
                    .addComponent(vrButton)
                    .addComponent(irButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(crButton)
                    .addComponent(irButton2)
                    .addComponent(irButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vendorCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(irButton1)
                    .addComponent(irButton4)
                    .addComponent(materialCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labourCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lrButton5)
                    .addComponent(receipt)
                    .addComponent(receiptCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mrButton)
                    .addComponent(paymentCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(workCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lrButton3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lrButton4)
                    .addComponent(workCombo2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(report_typeLabel1)
                .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(reportPanelLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(lrButton2))
                    .addGroup(reportPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lrButton7)
                            .addComponent(lrButton15))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(reportPanelLayout.createSequentialGroup()
                        .addComponent(lrButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lrButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lrButton1))
                    .addGroup(reportPanelLayout.createSequentialGroup()
                        .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(reportPanelLayout.createSequentialGroup()
                                .addComponent(lrButton8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lrButton9))
                            .addGroup(reportPanelLayout.createSequentialGroup()
                                .addComponent(lrButton16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lrButton18)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lrButton10)
                            .addComponent(lrButton14))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lrButton11)
                    .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lrButton12)
                        .addComponent(lrButton13)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lrButton17)
                .addContainerGap(142, Short.MAX_VALUE))
        );

        fromDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fromDateFocusGained(evt);
            }
        });

        fromLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        fromLabel.setText("From");

        toLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        toLabel.setText("To");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(fromLabel)
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(project_nameLabel)
                                .addGap(37, 37, 37)
                                .addComponent(projectCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(fromDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(toLabel)
                                .addGap(18, 18, 18)
                                .addComponent(toDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(211, 211, 211)
                        .addComponent(reportsLabel)))
                .addContainerGap())
            .addComponent(reportPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(reportsLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(project_nameLabel)
                    .addComponent(projectCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(fromLabel))
                    .addComponent(toLabel)
                    .addComponent(fromDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(reportPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mrButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mrButtonMouseEntered

        mrButton.setForeground(Color.white);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_mrButtonMouseEntered

    private void mrButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mrButtonMouseExited

        mrButton.setForeground(Color.black);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_mrButtonMouseExited

    private void irButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_irButtonMouseEntered
        
        irButton.setForeground(Color.white);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_irButtonMouseEntered

    private void irButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_irButtonMouseExited
        
        irButton.setForeground(Color.black);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_irButtonMouseExited

    private void receiptMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_receiptMouseEntered
        
        receipt.setForeground(Color.white);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_receiptMouseEntered

    private void receiptMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_receiptMouseExited
        
        receipt.setForeground(Color.black);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_receiptMouseExited

    private void lrButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lrButtonMouseEntered
        
        lrButton.setForeground(Color.white);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_lrButtonMouseEntered

    private void lrButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lrButtonMouseExited
        
        lrButton.setForeground(Color.black);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_lrButtonMouseExited

    private void prButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prButtonActionPerformed
        int flag=0;
        String fromdate,todate,sql;
        String pname = (String) projectCombo.getSelectedItem();
        
        if(projectCombo.getSelectedItem().equals("All"))
        {
        JOptionPane.showMessageDialog(null, "Select a project!!");
        flag++;
        }
        
       if((fromDate.getEditor().getText().equals(""))&&(!toDate.getEditor().getText().equals("")))
       {
           fromLabel.setForeground(Color.red);
           toLabel.setForeground(Color.black);
           flag++;
       
       }
        if((!fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
       {
           toLabel.setForeground(Color.red);
           fromLabel.setForeground(Color.black);
           flag++;
       
       }
        if((fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
        {
           fromdate = "01/01/2000";
           todate   = "01/01/2050";
        }
        else
        {
             SimpleDateFormat formater = new SimpleDateFormat("MM/dd/yyyy");
                              fromdate = formater.format(fromDate.getDate());
                                todate = formater.format(toDate.getDate());
        }     
        
        
        if(projectCombo.getSelectedItem().equals("All"))
        {
              sql = "select INVDATE,  'Inventory' as Category ,MATERIAL,INVTOTALCOST from Inventory  where  INVDATE between #"+fromdate+"# and #"+todate+"#  UNION all select  TRAN_DATE,'Transport' as Category , TRAN_GOODS,TOTAL  from Transport where  TRAN_DATE between #"+fromdate+"# and #"+todate+"# UNION all select  LDATE, 'Our labours ' as Category ,WORK,TOTAL from Labourdailymain where LDATE between #"+fromdate+"# and #"+todate+"# UNION all select  odate ,  'Deduction'   as Category ,wname,cost from Deduction UNION all select  wdate , 'Contarct work' as Category,work ,total from LabourdailyOther where  wdate between #"+fromdate+"# and #"+todate+"# order by INVDATE ;";
        }
        else
        {
            sql = "select INVDATE ,  'Inventory' as Category ,MATERIAL,INVTOTALCOST from Inventory  where PRONAME ='"+pname+"' and INVDATE between #"+fromdate+"# and #"+todate+"#  UNION all select  TRAN_DATE,'Transport' as Category , TRAN_GOODS,TOTAL  from Transport where  TRAN_PRO ='"+pname+"' and TRAN_DATE between #"+fromdate+"# and #"+todate+"# UNION all select  LDATE, 'Our labours ' as Category ,WORK,TOTAL from Labourdailymain where  PNAME ='"+pname+"' and LDATE between #"+fromdate+"# and #"+todate+"# UNION all select  odate ,  'Deduction'   as Category ,wname,cost from Deduction  where pname='"+pname+"'UNION all select  wdate , 'Contarct work' as Category,work ,total from LabourdailyOther where pname ='"+pname+"' and wdate between #"+fromdate+"# and #"+todate+"# order by Category ;";
            
        }
        
        
            
        if(flag==0)
        {
          
          try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("C:\\Program Files\\Software\\hyderproject\\reports\\Projectcost.jrxml");
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
      }
            
         
    }//GEN-LAST:event_prButtonActionPerformed

    private void projectComboFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_projectComboFocusGained

        project_nameLabel.setForeground(Color.black);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_projectComboFocusGained

    private void fromDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fromDateFocusGained

        fromLabel.setForeground(Color.black);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_fromDateFocusGained

    private void projectComboFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_projectComboFocusLost

        if(projectCombo.getSelectedItem().equals("Select"))
        {
            project_nameLabel.setForeground(Color.red);
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_projectComboFocusLost

    private void vrButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vrButtonActionPerformed
        int flag=0;
        String fromdate,todate,sql;
        String pname = (String) projectCombo.getSelectedItem();
        
        if(projectCombo.getSelectedItem().equals("All"))
        {
        JOptionPane.showMessageDialog(null, "Select a project!!");
        flag++;
        }
       if((fromDate.getEditor().getText().equals(""))&&(!toDate.getEditor().getText().equals("")))
       {
           fromLabel.setForeground(Color.red);
           toLabel.setForeground(Color.black);
           flag++;
       
       }
        if((!fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
       {
           toLabel.setForeground(Color.red);
           fromLabel.setForeground(Color.black);
           flag++;
       
       }
        if((fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
        {
           fromdate = "01/01/2000";
           todate   = "01/01/2050";
        }
        else
        {
             SimpleDateFormat formater = new SimpleDateFormat("MM/dd/yyyy");
                              fromdate = formater.format(fromDate.getDate());
                                todate = formater.format(toDate.getDate());
        }     
        
        if(projectCombo.getSelectedItem().equals("All"))
        {
        sql = "Select wdate,category,work,total from workquote  where  wdate between #"+fromdate+"# and #"+todate+"# union all select INVDATE,MATERIAL,'Inventory' ,INVTOTALPRICE from Inventory  where INVDATE between #"+fromdate+"# and #"+todate+"# order by wdate;";     
            
        }
        else
        {
          sql = "Select wdate,category,work,total from workquote where pname ='"+pname+"' and wdate between #"+fromdate+"# and #"+todate+"# union all select INVDATE,MATERIAL,'Inventory' as work ,INVTOTALPRICE from Inventory  where PRONAME ='"+pname+"' and INVDATE between #"+fromdate+"# and #"+todate+"# order by wdate;";
             
        }
        if(flag==0)
        {
        
          try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("C:\\Program Files\\Software\\hyderproject\\reports\\Projectprice.jrxml");
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        
        
        
        }
        
    }//GEN-LAST:event_vrButtonActionPerformed

    private void receiptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiptActionPerformed
        int flag=0;
        String fromdate,todate,sql;
        String pname = (String) projectCombo.getSelectedItem();
        String receipt= (String) receiptCombo.getSelectedItem();
        
       if((fromDate.getEditor().getText().equals(""))&&(!toDate.getEditor().getText().equals("")))
       {
           fromLabel.setForeground(Color.red);
           toLabel.setForeground(Color.black);
           flag++;
       
       }
        if((!fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
       {
           toLabel.setForeground(Color.red);
           fromLabel.setForeground(Color.black);
           flag++;
       
       }
        if((fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
        {
           fromdate = "01/01/2000";
           todate   = "01/01/2050";
        }
        else
        {
             SimpleDateFormat formater = new SimpleDateFormat("MM/dd/yyyy");
                              fromdate = formater.format(fromDate.getDate());
                                todate = formater.format(toDate.getDate());
        }     
         
        
        if(flag==0)
        {
        
          try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("C:\\Program Files\\Software\\hyderproject\\reports\\receipt.jrxml");
             sql = "Select * from Payment where  id = "+receipt+" and  pdate between #"+fromdate+"# and #"+todate+"#";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }   
        }
        
        
    }//GEN-LAST:event_receiptActionPerformed

    private void crButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crButtonActionPerformed

       
        
        int flag=0;
        String fromdate,todate;
        String pname = (String) projectCombo.getSelectedItem();
        
       if((fromDate.getEditor().getText().equals(""))&&(!toDate.getEditor().getText().equals("")))
       {
           fromLabel.setForeground(Color.red);
           toLabel.setForeground(Color.black);
           flag++;
       
       }
        if((!fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
       {
           toLabel.setForeground(Color.red);
           fromLabel.setForeground(Color.black);
           flag++;
       
       }
        if((fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
        {
           fromdate = "01/01/2000";
           todate   = "01/01/2050";
        }
        else
        {
             SimpleDateFormat formater = new SimpleDateFormat("MM/dd/yyyy");
                              fromdate = formater.format(fromDate.getDate());
                                todate = formater.format(toDate.getDate());
        }     
        
        
        if(flag==0)
        {
        if(projectCombo.getSelectedItem().equals("All"))
        {
          try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("C:\\Program Files\\Software\\hyderproject\\reports\\transport.jrxml");
            String sql = "select * from Transport where   TRAN_DATE between #"+fromdate+"# and #"+todate+"# order by TRAN_DATE;";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        }
        
        else
        {
            try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("C:\\Program Files\\Software\\hyderproject\\reports\\transport.jrxml");
            String sql = "select * from Transport where  TRAN_PRO ='"+pname+"' and  TRAN_DATE between #"+fromdate+"# and #"+todate+"# order by TRAN_DATE;";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
      //  JOptionPane.showMessageDialog(null, "NOT AT ALL");
        }
            
        }
            
    }//GEN-LAST:event_crButtonActionPerformed

    private void mrButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mrButtonActionPerformed
        
         int flag=0;
        String sql;
        String fromdate,todate;
        String pname = (String) projectCombo.getSelectedItem();
        String payment= (String) paymentCombo.getSelectedItem();
        
       if((fromDate.getEditor().getText().equals(""))&&(!toDate.getEditor().getText().equals("")))
       {
           fromLabel.setForeground(Color.red);
           toLabel.setForeground(Color.black);
           flag++;
       
       }
        if((!fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
       {
           toLabel.setForeground(Color.red);
           fromLabel.setForeground(Color.black);
           flag++;
       
       }
        if((fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
        {
           fromdate = "01/01/2000";
           todate   = "01/01/2050";
        }
        else
        {
             SimpleDateFormat formater = new SimpleDateFormat("MM/dd/yyyy");
                              fromdate = formater.format(fromDate.getDate());
                                todate = formater.format(toDate.getDate());
        }     
        
        if(paymentCombo.getSelectedItem().equals("All"))
        {
           sql = "select * from payment where  pdate between #"+fromdate+"# and #"+todate+"# order by pdate; ";  
        }
        else
        {
            sql = "select * from payment where cname= '"+payment+"' and pdate between #"+fromdate+"# and #"+todate+"# order by pdate; ";
        }
        
        
        if(flag==0)
        {
         try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("C:\\Program Files\\Software\\hyderproject\\reports\\payment.jrxml");
            //String sql = "select * from payment where  pdate between #"+fromdate+"# and #"+todate+"#; ";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        }   
        
    }//GEN-LAST:event_mrButtonActionPerformed

    private void irButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_irButtonActionPerformed

         int flag=0;
        String fromdate,todate;
        String pname = (String) projectCombo.getSelectedItem();
        
       if((fromDate.getEditor().getText().equals(""))&&(!toDate.getEditor().getText().equals("")))
       {
           fromLabel.setForeground(Color.red);
           toLabel.setForeground(Color.black);
           flag++;
       
       }
        if((!fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
       {
           toLabel.setForeground(Color.red);
           fromLabel.setForeground(Color.black);
           flag++;
       
       }
        if((fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
        {
           fromdate = "01/01/2000";
           todate   = "01/01/2050";
        }
        else
        {
             SimpleDateFormat formater = new SimpleDateFormat("MM/dd/yyyy");
                              fromdate = formater.format(fromDate.getDate());
                                todate = formater.format(toDate.getDate());
        }     
        
        
        if(flag==0)
        {
         try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("C:\\Program Files\\Software\\hyderproject\\reports\\woodinventory.jrxml");
            String sql = "select * from Wood where  BILLDATE between #"+fromdate+"# and #"+todate+"# order by BILLDATE; ";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        }   
    }//GEN-LAST:event_irButtonActionPerformed

    private void lrButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lrButtonActionPerformed
        try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("C:\\Program Files\\Software\\hyderproject\\reports\\vendor-list.jrxml");
            String sql = "select * from vendor;";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_lrButtonActionPerformed

    private void lrButton2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lrButton2MouseEntered
        lrButton2.setForeground(Color.white);        // TODO add your handling code here:
    }//GEN-LAST:event_lrButton2MouseEntered

    private void lrButton2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lrButton2MouseExited
        lrButton2.setForeground(Color.black);   // TODO add your handling code here:
    }//GEN-LAST:event_lrButton2MouseExited

    private void lrButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lrButton2ActionPerformed
     try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("C:\\Program Files\\Software\\hyderproject\\reports\\contractor-list.jrxml");
            String sql = "select * from contractor;";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_lrButton2ActionPerformed

    private void irButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_irButton1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_irButton1MouseEntered

    private void irButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_irButton1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_irButton1MouseExited

    private void irButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_irButton1ActionPerformed
         int flag=0;
        String fromdate,todate,sql;
        String pname = (String) projectCombo.getSelectedItem();
        String vendor = (String) vendorCombo.getSelectedItem();
        
       if((fromDate.getEditor().getText().equals(""))&&(!toDate.getEditor().getText().equals("")))
       {
           fromLabel.setForeground(Color.red);
           toLabel.setForeground(Color.black);
           flag++;
       
       }
        if((!fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
       {
           toLabel.setForeground(Color.red);
           fromLabel.setForeground(Color.black);
           flag++;
       
       }
        if((fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
        {
           fromdate = "01/01/2000";
           todate   = "01/01/2050";
        }
        else
        {
             SimpleDateFormat formater = new SimpleDateFormat("MM/dd/yyyy");
                              fromdate = formater.format(fromDate.getDate());
                                todate = formater.format(toDate.getDate());
        }     
        
        if (vendorCombo.getSelectedItem().equals("All"))
        {
            sql ="select VENDOR,WOODTYPE,BILLDATE,TOTAL from Wood where BILLDATE between #"+fromdate+"# and #"+todate+"# union all select VENNAME,MATERIAL,BILLDATE,INVTOTALCOST from Inventory where BILLDATE between #"+fromdate+"# and #"+todate+"# order by BILLDATE";
            
        }
        else
        {
            sql= "select VENDOR,WOODTYPE,BILLDATE,TOTAL from Wood where VENDOR='"+vendor+"' and BILLDATE between #"+fromdate+"# and #"+todate+"# union all select VENNAME,MATERIAL,BILLDATE,INVTOTALCOST from Inventory where VENNAME='"+vendor+"' and BILLDATE between #"+fromdate+"# and #"+todate+"# order by BILLDATE ";
            
        }   
        
        if(flag==0)
        { 
        
          try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("C:\\Program Files\\Software\\hyderproject\\reports\\vendor.jrxml");
           // String sql = "select VENDOR,WOODTYPE,BILLDATE,TOTAL from Wood where BILLDATE between #"+fromdate+"# and #"+todate+"# union all select VENNAME,MATERIAL,BILLDATE,INVTOTALCOST from Inventory where BILLDATE between #"+fromdate+"# and #"+todate+"#";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } }
            
        
        // TODO add your handling code here:
    }//GEN-LAST:event_irButton1ActionPerformed

    private void irButton2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_irButton2MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_irButton2MouseEntered

    private void irButton2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_irButton2MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_irButton2MouseExited

    private void irButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_irButton2ActionPerformed
         int flag=0;
        String fromdate,todate;
        String pname = (String) projectCombo.getSelectedItem();
        
       if((fromDate.getEditor().getText().equals(""))&&(!toDate.getEditor().getText().equals("")))
       {
           fromLabel.setForeground(Color.red);
           toLabel.setForeground(Color.black);
           flag++;
       
       }
        if((!fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
       {
           toLabel.setForeground(Color.red);
           fromLabel.setForeground(Color.black);
           flag++;
       
       }
        if((fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
        {
           fromdate = "01/01/2000";
           todate   = "01/01/2050";
        }
        else
        {
             SimpleDateFormat formater = new SimpleDateFormat("MM/dd/yyyy");
                              fromdate = formater.format(fromDate.getDate());
                                todate = formater.format(toDate.getDate());
        }     
        
        
        if(flag==0)
        {
        if(projectCombo.getSelectedItem().equals("All"))
        {
          try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("C:\\Program Files\\Software\\hyderproject\\reports\\Woodusage.jrxml");
            String sql = "Select PNAME, WOODTYPE,WOOD_QUAN,WOOD_BATCH,WOOD_COST from Labourdailymain where WORK='Carpentary' and WOODTYPE is  NOT NULL and  LDATE between #"+fromdate+"# and #"+todate+"# order by LDATE";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        }
        
        else
        {
            try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("C:\\Program Files\\Software\\hyderproject\\reports\\Woodusage.jrxml");
            String sql = "Select PNAME, WOODTYPE,WOOD_QUAN,WOOD_BATCH,WOOD_COST from Labourdailymain where WORK='Carpentary' and WOODTYPE is  NOT NULL and PNAME ='"+pname+"' and  LDATE between #"+fromdate+"# and #"+todate+"# order by LDATE";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
      //  JOptionPane.showMessageDialog(null, "NOT AT ALL");
        }
            
        }
            
    }//GEN-LAST:event_irButton2ActionPerformed

    private void irButton3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_irButton3MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_irButton3MouseEntered

    private void irButton3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_irButton3MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_irButton3MouseExited

    private void irButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_irButton3ActionPerformed
 int flag=0;
        String fromdate,todate;
        String pname = (String) projectCombo.getSelectedItem();
        
       if((fromDate.getEditor().getText().equals(""))&&(!toDate.getEditor().getText().equals("")))
       {
           fromLabel.setForeground(Color.red);
           toLabel.setForeground(Color.black);
           flag++;
       
       }
        if((!fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
       {
           toLabel.setForeground(Color.red);
           fromLabel.setForeground(Color.black);
           flag++;
       
       }
        if((fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
        {
           fromdate = "01/01/2000";
           todate   = "01/01/2050";
        }
        else
        {
             SimpleDateFormat formater = new SimpleDateFormat("MM/dd/yyyy");
                              fromdate = formater.format(fromDate.getDate());
                                todate = formater.format(toDate.getDate());
        }     
        
        
        if(flag==0)
        {
        if(projectCombo.getSelectedItem().equals("All"))
        {
          try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("C:\\Program Files\\Software\\hyderproject\\reports\\furniture.jrxml");
            String sql = "select pname,wdate,fname,fno,frate,total from workquote where category ='Furniture'  and  wdate between #"+fromdate+"# and #"+todate+"# order by wdate";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        }
        
        else
        {
            try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("C:\\Program Files\\Software\\hyderproject\\reports\\furniture.jrxml");
            String sql = "select pname,wdate,fname,fno,frate,total from workquote where category ='Furniture' and  pname ='"+pname+"' and  wdate between #"+fromdate+"# and #"+todate+"# order by wdate";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
      //  JOptionPane.showMessageDialog(null, "NOT AT ALL");
        }
            
        }
            
        
    }//GEN-LAST:event_irButton3ActionPerformed

    private void irButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_irButton4ActionPerformed
         int flag=0;
        String fromdate,todate,sql;
        String pname = (String) projectCombo.getSelectedItem();
        String material= (String) materialCombo.getSelectedItem();
        
       if((fromDate.getEditor().getText().equals(""))&&(!toDate.getEditor().getText().equals("")))
       {
           fromLabel.setForeground(Color.red);
           toLabel.setForeground(Color.black);
           flag++;
       
       }
        if((!fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
       {
           toLabel.setForeground(Color.red);
           fromLabel.setForeground(Color.black);
           flag++;
       
       }
        if((fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
        {
           fromdate = "01/01/2000";
           todate   = "01/01/2050";
        }
        else
        {
             SimpleDateFormat formater = new SimpleDateFormat("MM/dd/yyyy");
                              fromdate = formater.format(fromDate.getDate());
                                todate = formater.format(toDate.getDate());
        }     
         
        if(projectCombo.getSelectedItem().equals("All"))
        {
        if (materialCombo.getSelectedItem().equals("All"))
        {
            sql ="Select INVID,BILLDATE,MATERIAL,QUANTITY,VENNAME,INVTOTALCOST,INVTOTALPRICE ,INVBILLNO from inventory where   INVDATE between #"+fromdate+"# and #"+todate+"# order by BILLDATE";
           
        }
        else
        {
            sql= "Select INVID,BILLDATE,MATERIAL,QUANTITY,VENNAME,INVTOTALCOST,INVTOTALPRICE ,INVBILLNO from inventory where MATERIAL='"+material+"' and  INVDATE between #"+fromdate+"# and #"+todate+"# order by BILLDATE";
           
        } 
        }
        else
        {
         if (materialCombo.getSelectedItem().equals("All"))
        {
            sql ="Select INVID,BILLDATE,MATERIAL,QUANTITY,VENNAME,INVTOTALCOST,INVTOTALPRICE ,INVBILLNO from inventory where  PRONAME ='"+pname+"' and  INVDATE between #"+fromdate+"# and #"+todate+"#";
           
        }
        else
        {
            sql= "Select INVID,BILLDATE,MATERIAL,QUANTITY,VENNAME,INVTOTALCOST,INVTOTALPRICE ,INVBILLNO from inventory where PRONAME ='"+pname+"' and MATERIAL='"+material+"' and  INVDATE between #"+fromdate+"# and #"+todate+"#";
           
        }
        
        }
        
        if(flag==0)
        {
        
          try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("C:\\Program Files\\Software\\hyderproject\\reports\\inventory.jrxml");
            //String sql = "Select INVID,BILLDATE,MATERIAL,QUANTITY,VENNAME,INVTOTALCOST,INVTOTALPRICE ,INVBILLNO from inventory where   INVDATE between #"+fromdate+"# and #"+todate+"#";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }   
        }
              
    }//GEN-LAST:event_irButton4ActionPerformed

    private void lrButton3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lrButton3MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_lrButton3MouseEntered

    private void lrButton3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lrButton3MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_lrButton3MouseExited

    private void lrButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lrButton3ActionPerformed
        int flag=0;
        String fromdate,todate,sql;
        String pname = (String) projectCombo.getSelectedItem();
        String work  = (String) workCombo1.getSelectedItem();
        
       if((fromDate.getEditor().getText().equals(""))&&(!toDate.getEditor().getText().equals("")))
       {
           fromLabel.setForeground(Color.red);
           toLabel.setForeground(Color.black);
           flag++;
       
       }
        if((!fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
       {
           toLabel.setForeground(Color.red);
           fromLabel.setForeground(Color.black);
           flag++;
       
       }
        if((fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
        {
           fromdate = "01/01/2000";
           todate   = "01/01/2050";
        }
        else
        {
             SimpleDateFormat formater = new SimpleDateFormat("MM/dd/yyyy");
                              fromdate = formater.format(fromDate.getDate());
                                todate = formater.format(toDate.getDate());
        }     
        
        if(projectCombo.getSelectedItem().equals("All"))
        {
         if (workCombo1.getSelectedItem().equals("All"))
        {
             sql = "select * from Labourdailymain  where    LDATE between #"+fromdate+"# and #"+todate+"# order by LDATE";
        }
        else
        {
              sql = "select * from Labourdailymain  where  WORK='"+work+"' and  LDATE between #"+fromdate+"# and #"+todate+"# order by LDATE ";
        }
        }
        else
        {
         if (workCombo1.getSelectedItem().equals("All"))
        {
          sql = "select * from Labourdailymain  where  PNAME='"+pname+"' and  LDATE between #"+fromdate+"# and #"+todate+"# order by LDATE";
        }
        else
        {
            sql = "select * from Labourdailymain  where WORK='"+work+"' and  PNAME='"+pname+"' and  LDATE between #"+fromdate+"# and #"+todate+"# order by LDATE ";
        }
        
        
        }
        
        if(flag==0)
        {
        
          try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("C:\\Program Files\\Software\\hyderproject\\reports\\ourlabour.jrxml");
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        
        }
        
        
        
        }    
    }//GEN-LAST:event_lrButton3ActionPerformed

    private void lrButton4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lrButton4MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_lrButton4MouseEntered

    private void lrButton4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lrButton4MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_lrButton4MouseExited

    private void lrButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lrButton4ActionPerformed

        
         int flag=0;
        String fromdate,todate,sql;
        String pname = (String) projectCombo.getSelectedItem();
        String work = (String) workCombo2.getSelectedItem();
        
       if((fromDate.getEditor().getText().equals(""))&&(!toDate.getEditor().getText().equals("")))
       {
           fromLabel.setForeground(Color.red);
           toLabel.setForeground(Color.black);
           flag++;
       
       }
        if((!fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
       {
           toLabel.setForeground(Color.red);
           fromLabel.setForeground(Color.black);
           flag++;
       
       }
        if((fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
        {
           fromdate = "01/01/2000";
           todate   = "01/01/2050";
        }
        else
        {
             SimpleDateFormat formater = new SimpleDateFormat("MM/dd/yyyy");
                              fromdate = formater.format(fromDate.getDate());
                                todate = formater.format(toDate.getDate());
        }
           if(projectCombo.getSelectedItem().equals("All"))
        {
         if (workCombo2.getSelectedItem().equals("All"))
        {
             sql = "select * from LabourdailyOther  where    wdate between #"+fromdate+"# and #"+todate+"# order by wdate ";
        }
        else
        {
              sql = "select * from LabourdailyOther  where  work='"+work+"' and  wdate between #"+fromdate+"# and #"+todate+"# order by wdate";
        }
        }
        else
        {
         if (workCombo2.getSelectedItem().equals("All"))
        {
          sql = "select * from LabourdailyOther  where  pname='"+pname+"' and  wdate between #"+fromdate+"# and #"+todate+"# order by wdate";
        }
        else
        {
            sql = "select * from LabourdailyOther  where work='"+work+"' and  pname='"+pname+"' and  wdate between #"+fromdate+"# and #"+todate+"# order by wdate ";
        }
        
        
        }
        
        
        if(flag==0)
        {
        
          try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("C:\\Program Files\\Software\\hyderproject\\reports\\contract-work.jrxml");
            
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
    
            
        }
            
    }//GEN-LAST:event_lrButton4ActionPerformed

    private void lrButton5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lrButton5MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_lrButton5MouseEntered

    private void lrButton5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lrButton5MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_lrButton5MouseExited

    private void lrButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lrButton5ActionPerformed
        int flag=0;
        String fromdate,todate,sql;
        String pname = (String) projectCombo.getSelectedItem();
        String labour = (String) labourCombo.getSelectedItem();
        
       if((fromDate.getEditor().getText().equals(""))&&(!toDate.getEditor().getText().equals("")))
       {
           fromLabel.setForeground(Color.red);
           toLabel.setForeground(Color.black);
           flag++;
       
       }
        if((!fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
       {
           toLabel.setForeground(Color.red);
           fromLabel.setForeground(Color.black);
           flag++;
       
       }
        if((fromDate.getEditor().getText().equals(""))&&(toDate.getEditor().getText().equals("")))
        {
           fromdate = "01/01/2000";
           todate   = "01/01/2050";
        }
        else
        {
             SimpleDateFormat formater = new SimpleDateFormat("MM/dd/yyyy");
                              fromdate = formater.format(fromDate.getDate());
                                todate = formater.format(toDate.getDate());
        }     
        if(projectCombo.getSelectedItem().equals("All"))
        {
         if (labourCombo.getSelectedItem().equals("All"))
        {
            sql ="select * from Labourdailysub  where    LDATE between #"+fromdate+"# and #"+todate+"# order by LDATE";
        }
        else
        {
            sql= "select * from Labourdailysub  where  LNAME='"+labour+"' and  LDATE between #"+fromdate+"# and #"+todate+"# order by LDATE";
        }
        }
        else
        {
         if (labourCombo.getSelectedItem().equals("All"))
        {
            sql ="select * from Labourdailysub  where  PNAME ='"+pname+"' and   LDATE between #"+fromdate+"# and #"+todate+"# order by LDATE";
        }
        else
        {
            sql= "select * from Labourdailysub  where PNAME ='"+pname+"' and  LNAME='"+labour+"' and  LDATE between #"+fromdate+"# and #"+todate+"#order by LDATE";
        }
        
        
        }
        
        
        if(flag==0)
        {
       
            try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection con = DriverManager.getConnection("jdbc:odbc:indlands","","");
            JasperDesign jd = JRXmlLoader.load("C:\\Program Files\\Software\\hyderproject\\reports\\Labour.jrxml");
            //String sql = "select * from Labourdailysub  where  PNAME ='"+pname+"' and  LDATE between #"+fromdate+"# and #"+todate+"#";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = (JasperPrint) JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        }
    }//GEN-LAST:event_lrButton5ActionPerformed

    private void prButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prButtonMouseEntered
        prButton.setForeground(Color.white);        // TODO add your handling code here:
    }//GEN-LAST:event_prButtonMouseEntered

    private void prButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prButtonMouseExited
         prButton.setForeground(Color.black);   // TODO add your handling code here:
    }//GEN-LAST:event_prButtonMouseExited

    private void lrButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lrButton1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_lrButton1MouseEntered

    private void lrButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lrButton1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_lrButton1MouseExited

    private void lrButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lrButton1ActionPerformed
        Functions.Report("Dbcopy-plan","Plan");        // TODO add your handling code here:
    }//GEN-LAST:event_lrButton1ActionPerformed

    private void lrButton6MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lrButton6MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_lrButton6MouseEntered

    private void lrButton6MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lrButton6MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_lrButton6MouseExited

    private void lrButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lrButton6ActionPerformed
        Functions.Report("DBcopy-office","Office" );        // TODO add your handling code here:
    }//GEN-LAST:event_lrButton6ActionPerformed

    private void lrButton7MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lrButton7MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_lrButton7MouseEntered

    private void lrButton7MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lrButton7MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_lrButton7MouseExited

    private void lrButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lrButton7ActionPerformed
        Functions.Report("DBcopy-payment", "Payment");        // TODO add your handling code here:
    }//GEN-LAST:event_lrButton7ActionPerformed

    private void lrButton8MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lrButton8MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_lrButton8MouseEntered

    private void lrButton8MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lrButton8MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_lrButton8MouseExited

    private void lrButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lrButton8ActionPerformed
            Functions.Report("DBcopy-deduction","deduction where category ='Deduction'");        // TODO add your handling code here:
    }//GEN-LAST:event_lrButton8ActionPerformed

    private void lrButton9MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lrButton9MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_lrButton9MouseEntered

    private void lrButton9MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lrButton9MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_lrButton9MouseExited

    private void lrButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lrButton9ActionPerformed
        Functions.Report("DBcopy-inventory", "Inventory");        // TODO add your handling code here:
    }//GEN-LAST:event_lrButton9ActionPerformed

    private void lrButton10MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lrButton10MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_lrButton10MouseEntered

    private void lrButton10MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lrButton10MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_lrButton10MouseExited

    private void lrButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lrButton10ActionPerformed
    Functions.Report("DBcopy-extraexpense", "deduction where category ='Extra Expenses'");        // TODO add your handling code here:
    }//GEN-LAST:event_lrButton10ActionPerformed

    private void lrButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lrButton12ActionPerformed
      Functions.Report("DBcopy-labourdailymain","Labourdailymain" );             // TODO add your handling code here:
    }//GEN-LAST:event_lrButton12ActionPerformed

    private void lrButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lrButton14ActionPerformed
      Functions.Report("DBcopy-transport","Transport" );             // TODO add your handling code here:
    }//GEN-LAST:event_lrButton14ActionPerformed

    private void lrButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lrButton15ActionPerformed
          Functions.Report("DBcopy-workquote","workquote" );             // TODO add your handling code here:
    }//GEN-LAST:event_lrButton15ActionPerformed

    private void lrButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lrButton16ActionPerformed
      Functions.Report("DBcopy-labourdailyother","Labourdailyother" );             // TODO add your handling code here:
    }//GEN-LAST:event_lrButton16ActionPerformed

    private void lrButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lrButton17ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lrButton17ActionPerformed

    private void lrButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lrButton18ActionPerformed
      Functions.Report("DBcopy-labour","labour" );             // TODO add your handling code here:
    }//GEN-LAST:event_lrButton18ActionPerformed

    private void lrButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lrButton11ActionPerformed
      Functions.Report("DBcopy-project","Project" );             // TODO add your handling code here:
    }//GEN-LAST:event_lrButton11ActionPerformed

    private void lrButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lrButton13ActionPerformed
  Functions.Report("DBcopy-labourdailysub","Labourdailysub" );             // TODO add your handling code here:
    }//GEN-LAST:event_lrButton13ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Reports().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton crButton;
    private org.jdesktop.swingx.JXDatePicker fromDate;
    private javax.swing.JLabel fromLabel;
    private javax.swing.JButton irButton;
    private javax.swing.JButton irButton1;
    private javax.swing.JButton irButton2;
    private javax.swing.JButton irButton3;
    private javax.swing.JButton irButton4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JComboBox labourCombo;
    private javax.swing.JButton lrButton;
    private javax.swing.JButton lrButton1;
    private javax.swing.JButton lrButton10;
    private javax.swing.JButton lrButton11;
    private javax.swing.JButton lrButton12;
    private javax.swing.JButton lrButton13;
    private javax.swing.JButton lrButton14;
    private javax.swing.JButton lrButton15;
    private javax.swing.JButton lrButton16;
    private javax.swing.JButton lrButton17;
    private javax.swing.JButton lrButton18;
    private javax.swing.JButton lrButton2;
    private javax.swing.JButton lrButton3;
    private javax.swing.JButton lrButton4;
    private javax.swing.JButton lrButton5;
    private javax.swing.JButton lrButton6;
    private javax.swing.JButton lrButton7;
    private javax.swing.JButton lrButton8;
    private javax.swing.JButton lrButton9;
    private javax.swing.JComboBox materialCombo;
    private javax.swing.JButton mrButton;
    private javax.swing.JComboBox paymentCombo;
    private javax.swing.JButton prButton;
    private javax.swing.JComboBox projectCombo;
    private javax.swing.JLabel project_nameLabel;
    private javax.swing.JButton receipt;
    private javax.swing.JComboBox receiptCombo;
    private javax.swing.JPanel reportPanel;
    private javax.swing.JLabel report_typeLabel1;
    private javax.swing.JLabel reportsLabel;
    private org.jdesktop.swingx.JXDatePicker toDate;
    private javax.swing.JLabel toLabel;
    private javax.swing.JComboBox vendorCombo;
    private javax.swing.JButton vrButton;
    private javax.swing.JComboBox workCombo1;
    private javax.swing.JComboBox workCombo2;
    // End of variables declaration//GEN-END:variables
}
